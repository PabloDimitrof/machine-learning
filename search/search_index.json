{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Template de Entrega","text":""},{"location":"#template-de-entrega","title":"Template de Entrega","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#grupokit-x","title":"Grupo/Kit X","text":"<ol> <li>Pablo Dimitrof de Siqueira</li> </ol> <p>Instru\u00e7\u00f5es</p> <p>Voc\u00eas devem utilizar este template como um bloco de notas para registrar o que foi feito e o que falta fazer. Voc\u00eas devem adicionar as informa\u00e7\u00f5es necess\u00e1rias. O template deve ser editado e atualizado a cada entrega, registrando assim a data de entrega e o que foi feito at\u00e9 o momento via Git.</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 - Data 23/02/2025</li> <li> Roteiro 2</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"#diagramas","title":"Diagramas","text":"<p>Use o Mermaid para criar os diagramas de documenta\u00e7\u00e3o.</p> <p>Mermaid Live Editor</p> <pre><code>flowchart TD\n    Deployment:::orange --&gt;|defines| ReplicaSet\n    ReplicaSet --&gt;|manages| pod((Pod))\n    pod:::red --&gt;|runs| Container\n    Deployment --&gt;|scales| pod\n    Deployment --&gt;|updates| pod\n\n    Service:::orange --&gt;|exposes| pod\n\n    subgraph  \n        ConfigMap:::orange\n        Secret:::orange\n    end\n\n    ConfigMap --&gt; Deployment\n    Secret --&gt; Deployment\n    classDef red fill:#f55\n    classDef orange fill:#ffa500</code></pre>"},{"location":"#codigos","title":"C\u00f3digos","text":"De um arquivo remotoAnota\u00e7\u00f5es no c\u00f3digo main.yaml<pre><code>name: ci\non:\n  - push\n  - pull_request\n\n# Environment\nenv:\n  CI: true\n  PYTHON_VERSION: 3.12\n\n# Jobs to run\njobs:\n\n  # Build and deploy documentation site\n  deploy:\n    if: github.event_name != 'pull_request' &amp;&amp; github.ref == 'refs/heads/main'\n    runs-on: ubuntu-latest\n    steps:\n\n      # Checkout source form GitHub\n      - uses: actions/checkout@v4\n\n      # Install Python runtime and dependencies\n      - uses: actions/setup-python@v4\n        with:\n          python-version: ${{ env.PYTHON_VERSION }}\n\n      # pip\n      - run: |\n          pip install -r requirements.txt\n\n      # deploy\n      - run: |\n          mkdocs gh-deploy --force\n</code></pre> compose.yaml<pre><code>name: app\n\n    db:\n        image: postgres:17\n        environment:\n            POSTGRES_DB: ${POSTGRES_DB:-projeto} # (1)!\n            POSTGRES_USER: ${POSTGRES_USER:-projeto}\n            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-projeto}\n        ports:\n            - 5432:5432 #(2)!\n</code></pre> <ol> <li> <p>Caso a vari\u00e1vel de ambiente <code>POSTGRES_DB</code> n\u00e3o exista ou seja nula - n\u00e3o seja definida no arquivo <code>.env</code> - o valor padr\u00e3o ser\u00e1 <code>projeto</code>. Vide documenta\u00e7\u00e3o.</p> </li> <li> <p>Aqui \u00e9 feito um t\u00fanel da porta 5432 do container do banco de dados para a porta 5432 do host (no caso localhost). Em um ambiente de produ\u00e7\u00e3o, essa porta n\u00e3o deve ser exposta, pois ningu\u00e9m de fora do compose deveria acessar o banco de dados diretamente.</p> </li> </ol>"},{"location":"#exemplo-de-video","title":"Exemplo de v\u00eddeo","text":"<p>Lorem ipsum dolor sit amet</p>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"arvore-decisao/main/","title":"\u00c1rvore de Decis\u00e3o","text":""},{"location":"arvore-decisao/main/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O objetivo deste roteiro \u00e9 utilizar as bibliotecas <code>pandas</code>, <code>numpy</code>, <code>matplotlib</code> e <code>scikit-learn</code>, al\u00e9m da base de dados escolhida no Kagle, para treinar e avaliar um algoritmo de \u00e1rvore de decis\u00e3o. A proposta \u00e9 verificar como vari\u00e1veis como est\u00e1dio, p\u00fablico, posse de bola, passes e chances criadas influenciam no resultado final da partida (<code>class</code>), permitindo explorar o uso de modelos de Machine Learning no contexto esportivo.</p>"},{"location":"arvore-decisao/main/#base-de-dados","title":"Base de dados","text":"<p>A base de dados utilizada neste projeto cont\u00e9m informa\u00e7\u00f5es de partidas de futebol, totalizando 1140 linhas e 40 colunas. Entre as vari\u00e1veis est\u00e3o posse de bola, n\u00famero de passes e chances criadas. A vari\u00e1vel alvo escolhida \u00e9 a coluna <code>class</code>, que indica o resultado da partida (vit\u00f3ria do mandante, empate ou vit\u00f3ria do visitante), sendo o objeto da classifica\u00e7\u00e3o pelo algoritmo de \u00e1rvore de decis\u00e3o.</p>"},{"location":"arvore-decisao/main/#exploracao-dos-dados","title":"Explora\u00e7\u00e3o dos Dados","text":"<p>A seguir foi feita uma an\u00e1lise do significado e composi\u00e7\u00e3o de cada coluna presente na base, com a finalidade de identificar poss\u00edveis problemas a serem tratados posteriormente. As visualiza\u00e7\u00f5es e estat\u00edsticas descritivas ajudam a compreender a natureza dos dados e orientar decis\u00f5es de pr\u00e9-processamento e modelagem.</p> classattendancestadiumhome_possessionsaway_possessionsHome TeamAway Teamhome_passaway_passhome_chancesaway_chances <p>A coluna <code>class</code> \u00e9 a vari\u00e1vel alvo do projeto e representa o resultado da partida: vit\u00f3ria do mandante (\"h\"), empate (\"d\") ou vit\u00f3ria do visitante (\"a\").  Trata-se de uma vari\u00e1vel categ\u00f3rica com tr\u00eas poss\u00edveis valores, sendo o objeto de classifica\u00e7\u00e3o do modelo de \u00e1rvore de decis\u00e3o.  A an\u00e1lise explorat\u00f3ria dessa coluna \u00e9 essencial para observar o balanceamento do conjunto de dados, isto \u00e9, se h\u00e1 propor\u00e7\u00f5es semelhantes ou discrepantes entre os resultados poss\u00edveis.</p> 2025-10-28T14:01:06.406686 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>attendance</code> representa o p\u00fablico presente em cada partida, um indicador de contexto do jogo que pode refletir fatores como mando de campo, relev\u00e2ncia do confronto e engajamento da torcida. Em bases de futebol, o p\u00fablico tende a variar bastante entre est\u00e1dios e rodadas, podendo apresentar assimetria (jogos muito cheios em arenas grandes) e valores at\u00edpicos (cl\u00e1ssicos, finais).</p> <p>Do ponto de vista anal\u00edtico, \u00e9 uma vari\u00e1vel cont\u00ednua \u00fatil para observar a distribui\u00e7\u00e3o de torcedores ao longo das partidas e investigar rela\u00e7\u00f5es com o resultado (<code>class</code>).</p> 2025-10-28T14:01:06.480373 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>stadium</code> identifica o est\u00e1dio onde a partida foi disputada. Trata-se de uma vari\u00e1vel categ\u00f3rica, associada ao contexto e \u00e0 capacidade do local, podendo refletir fatores como mando de campo, perfil da torcida, relevo do gramado e at\u00e9 particularidades log\u00edsticas.  Na an\u00e1lise explorat\u00f3ria, \u00e9 \u00fatil observar a frequ\u00eancia de jogos por est\u00e1dio, verificando balanceamento da amostra (quais arenas t\u00eam mais/menos partidas) e poss\u00edveis vieses (ex.: concentra\u00e7\u00e3o em poucos est\u00e1dios).  Rela\u00e7\u00f5es mais profundas com o resultado (<code>class</code>) podem ser investigadas em etapas seguintes, mas aqui focamos em entender a composi\u00e7\u00e3o dessa vari\u00e1vel no conjunto de dados.</p> 2025-10-28T14:01:06.665323 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_possessions</code> representa a porcentagem de posse de bola do time mandante em cada partida.  Trata-se de uma vari\u00e1vel num\u00e9rica cont\u00ednua, normalmente variando entre 30% e 70% na maioria dos jogos, podendo indicar estilos de jogo (times que mant\u00eam a bola ou que jogam mais reativamente).  A an\u00e1lise explorat\u00f3ria dessa vari\u00e1vel permite observar a distribui\u00e7\u00e3o da posse de bola entre os mandantes, identificar valores at\u00edpicos e comparar a m\u00e9dia do controle de jogo ao longo das rodadas.  Posteriormente, poder\u00e1 ser interessante relacionar essa posse com o resultado final (<code>class</code>) para verificar padr\u00f5es.</p> 2025-10-28T14:01:06.847952 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_possessions</code> representa a porcentagem de posse de bola do time visitante em cada partida.  Por ser uma vari\u00e1vel num\u00e9rica cont\u00ednua, sua distribui\u00e7\u00e3o ajuda a observar o comportamento dos visitantes em termos de controle de jogo, identificar valores at\u00edpicos e comparar a tend\u00eancia m\u00e9dia de posse fora de casa.  Em etapas posteriores, pode ser relacionada ao resultado (<code>class</code>) para investigar padr\u00f5es de desempenho como visitante.</p> 2025-10-28T14:01:06.984253 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>Home Team</code> identifica o time mandante na partida. Embora esteja codificada numericamente no dataset, sua natureza \u00e9 categ\u00f3rica (IDs de times).  Na an\u00e1lise explorat\u00f3ria, \u00e9 \u00fatil observar a frequ\u00eancia de jogos por mandante, verificando o balanceamento da amostra entre os times que atuam em casa e poss\u00edveis concentra\u00e7\u00f5es.  Rela\u00e7\u00f5es com o resultado (<code>class</code>) podem ser exploradas depois; aqui focamos em entender a composi\u00e7\u00e3o dessa vari\u00e1vel.</p> 2025-10-28T14:01:07.148154 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>Away Team</code> identifica o time visitante na partida. Apesar de codificada como n\u00famero, sua natureza \u00e9 categ\u00f3rica (IDs de times).  Na an\u00e1lise explorat\u00f3ria, observar a frequ\u00eancia de jogos por visitante ajuda a avaliar o balanceamento da amostra e poss\u00edveis concentra\u00e7\u00f5es de partidas em determinados clubes.</p> 2025-10-28T14:01:07.335485 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_pass</code> indica o n\u00famero de passes realizados pelo time mandante em cada partida.  \u00c9 uma vari\u00e1vel num\u00e9rica cont\u00ednua que ajuda a caracterizar o estilo de jogo do mandante, podendo variar bastante entre equipes mais ou menos dependentes da posse de bola.  Na an\u00e1lise explorat\u00f3ria, observar a distribui\u00e7\u00e3o dos passes permite identificar m\u00e9dias, dispers\u00e3o e valores at\u00edpicos.</p> 2025-10-28T14:01:07.493622 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_pass</code> indica o n\u00famero de passes realizados pelo time visitante em cada partida.  Sendo uma vari\u00e1vel num\u00e9rica cont\u00ednua, sua distribui\u00e7\u00e3o mostra como os visitantes se comportam em termos de constru\u00e7\u00e3o de jogadas e controle de posse fora de casa.  A an\u00e1lise explorat\u00f3ria ajuda a entender a m\u00e9dia de passes, varia\u00e7\u00f5es entre os jogos e eventuais valores extremos.</p> 2025-10-28T14:01:07.682552 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_chances</code> representa a quantidade de chances de gol criadas pelo time mandante durante a partida.  \u00c9 uma vari\u00e1vel num\u00e9rica discreta que indica o n\u00edvel de ofensividade da equipe jogando em casa.  A an\u00e1lise explorat\u00f3ria permite identificar a frequ\u00eancia de jogos com poucas ou muitas oportunidades e verificar a dispers\u00e3o desse tipo de estat\u00edstica.</p> 2025-10-28T14:01:07.816271 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_chances</code> indica a quantidade de chances de gol criadas pelo time visitante durante a partida.  \u00c9 uma vari\u00e1vel num\u00e9rica discreta que ajuda a compreender a ofensividade dos times jogando fora de casa.  A an\u00e1lise explorat\u00f3ria mostra como os visitantes se comportam em termos de cria\u00e7\u00e3o de oportunidades, permitindo identificar padr\u00f5es de equil\u00edbrio ou diferen\u00e7as marcantes em rela\u00e7\u00e3o aos mandantes.</p> 2025-10-28T14:01:07.952453 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/"},{"location":"arvore-decisao/main/#pre-processamento","title":"Pr\u00e9-processamento","text":"<p>Ap\u00f3s a explora\u00e7\u00e3o inicial da base, foram aplicados procedimentos de pr\u00e9-processamento para preparar os dados para o treinamento do modelo. Entre as etapas realizadas est\u00e3o:</p> <ul> <li>Convers\u00e3o de tipos: vari\u00e1veis originalmente em texto com valores num\u00e9ricos (como <code>attendance</code>) foram transformadas em formato num\u00e9rico.  </li> <li>Tratamento de valores categ\u00f3ricos: colunas como <code>stadium</code>, <code>Home Team</code> e <code>Away Team</code> foram mantidas como categ\u00f3ricas, sendo posteriormente convertidas em vari\u00e1veis num\u00e9ricas por meio de t\u00e9cnicas de codifica\u00e7\u00e3o.  </li> <li>Remo\u00e7\u00e3o de colunas irrelevantes ou redundantes: colunas de identifica\u00e7\u00e3o e de tempo (<code>date</code>, <code>clock</code>, <code>links</code>), bem como estat\u00edsticas que representam vazamento de informa\u00e7\u00e3o do resultado (ex.: <code>Goals Home</code>, <code>Away Goals</code>), foram descartadas do conjunto de treino.  </li> <li>Separa\u00e7\u00e3o entre features e target: as vari\u00e1veis explicativas (<code>X</code>) foram definidas a partir de aproximadamente dez colunas relevantes da base, enquanto a vari\u00e1vel alvo (<code>y</code>) \u00e9 a coluna <code>class</code>.  </li> <li>Divis\u00e3o em treino e teste: o conjunto de dados foi dividido em duas partes, garantindo estratifica\u00e7\u00e3o do alvo para manter o equil\u00edbrio das classes.</li> </ul> <p>Com essas etapas, os dados foram organizados de forma consistente, reduzindo ru\u00eddos e preparando a base para a etapa seguinte: o treinamento do modelo de \u00e1rvore de decis\u00e3o.</p> Base preparadacodeBase original stadium class attendance Home Team Away Team home_possessions away_possessions home_pass away_pass home_chances away_chances 6 1 36173 19 14 63.3 36.7 79.4 62.5 1 0 7 1 59475 2 11 53.6 46.4 87.1 84.6 1 0 24 1 41830 7 1 27.7 72.3 70.7 88.2 0 4 25 0 10305 15 10 42.7 57.3 76.6 85.5 2 0 16 1 30157 20 8 50.4 49.6 84.9 83.8 2 2 12 2 34624 13 2 37.4 62.6 79.6 89.3 0 1 11 1 0 14 11 51.9 48.1 85.6 77.5 0 2 12 1 0 13 8 54.8 45.2 85.6 78.8 1 0 24 2 41400 7 1 36 64 80.8 89.5 1 1 11 1 59949 14 4 47 53 75.8 78.7 1 1 6 2 36405 19 4 63 37 79 67.1 1 1 <pre><code>import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ndf = pd.read_csv(\"./src/mydata.csv\")\n\n# Excluir as colunas n\u00e3o desejadas\ndf = df.drop(columns= [\"date\", \"clock\", \"links\", \"Goals Home\", \"Away Goals\", \"home_shots\", \"away_shots\", \"home_on\", \"away_on\",\n                        \"home_off\", \"away_off\", \"home_blocked\", \"away_blocked\", \"home_corners\", \"away_corners\", \n                        \"home_offside\", \"away_offside\", \"home_tackles\", \"away_tackles\", \"home_duels\", \"away_duels\",\n                        \"home_saves\", \"away_saves\", \"home_fouls\", \"away_fouls\", \"home_yellow\", \"away_yellow\",\n                        \"home_red\", \"away_red\"])\n\n# Label encoding dos estadios em texto\ndf[\"stadium\"] = label_encoder.fit_transform(df[\"stadium\"])\n\n# Transformar resultado do jogo times em n\u00fameros\ndf[\"class\"] = df[\"class\"].replace({'h':0, 'd': 1, 'a':2})\n\n# Transforma o p\u00fablido de string para n\u00famero\ndf[\"attendance\"] = df[\"attendance\"].str.replace(',', '').astype(int)\n\nprint(df.sample(frac=.01).to_markdown(index=False))\n</code></pre> date clock stadium class attendance Home Team Goals Home Away Team Away Goals home_possessions away_possessions home_shots away_shots home_on away_on home_off away_off home_blocked away_blocked home_pass away_pass home_chances away_chances home_corners away_corners home_offside away_offside home_tackles away_tackles home_duels away_duels home_saves away_saves home_fouls away_fouls home_yellow away_yellow home_red away_red links 19th May 2022 8:00pm Villa Park d 40,468 7 1 23 1 71.3 28.7 22 10 9 5 7 2 6 3 90.1 68.4 0 1 13 6 1 0 62.5 54.5 48.3 51.7 3 8 11 20 0 1 0 1 https://www.skysports.com/football/aston-villa-vs-burnley/stats/446458 18th October 2021 8:00pm Emirates Stadium d 59,475 2 2 11 2 53.6 46.4 17 9 6 6 7 3 4 0 87.1 84.6 1 0 6 4 0 3 52.9 72.7 28.6 71.4 4 4 7 4 1 1 0 0 https://www.skysports.com/football/arsenal-vs-crystal-palace/stats/446358 10th April 2022 4:30pm Etihad Stadium d 53,197 1 2 5 2 55.1 44.9 11 6 5 4 4 2 2 0 85.9 80.6 2 3 4 1 5 2 35.3 66.7 50 50 2 2 9 11 1 4 0 0 https://www.skysports.com/football/manchester-city-vs-liverpool/stats/446603 17/01/2021 7:15pm Etihad Stadium h 0 1 4 11 0 72.2 27.8 13 2 6 0 3 1 4 1 90.4 72.2 1 0 11 1 0 0 55.6 60 53.8 46.2 0 2 9 8 0 0 0 0 https://www.skysports.com/football/manchester-city-vs-crystal-palace/stats/429023 14th May 2023 4:30pm Emirates Stadium a 60,139 2 0 6 3 40.9 59.1 14 12 2 6 8 5 4 1 76.7 83.4 1 2 5 2 1 4 30 60 42.1 57.9 3 2 13 17 1 2 0 0 https://www.skysports.com/football/arsenal-vs-brighton-and-hove-albion/464985 6/12/2020 2:00pm Bramall Lane a 0 25 1 18 2 29.7 70.3 4 13 1 4 2 4 1 5 66.9 85.4 0 1 6 5 4 4 25 66.7 54.8 45.2 2 0 13 6 1 3 0 0 https://www.skysports.com/football/sheffield-united-vs-leicester-city/stats/428943 25/04/2021 12:00pm Molineux a 0 13 0 23 4 59.2 40.8 12 14 2 7 5 6 5 1 77.8 71.7 0 3 8 5 2 2 68.8 66.7 47.6 52.4 3 2 8 9 1 2 0 0 https://www.skysports.com/football/wolverhampton-wanderers-vs-burnley/stats/429166 19th February 2023 2:00pm Old Trafford h 73,578 3 3 18 0 56.9 43.1 26 19 8 3 9 9 9 7 84.6 81.1 6 2 6 6 0 1 69.6 53.8 69.6 30.4 3 5 9 9 0 2 0 0 https://www.skysports.com/football/manchester-united-vs-leicester-city/464870 19th October 2022 7:30pm Anfield h 53,346 5 1 14 0 53.8 46.2 22 8 7 3 8 4 7 1 85.2 80.8 1 4 8 3 1 0 61.5 53.3 61.1 38.9 3 6 9 8 0 0 0 0 https://www.skysports.com/football/liverpool-vs-west-ham-united/464752 12th December 2021 4:30pm Selhurst Park h 24,066 11 3 17 1 61.2 38.8 17 12 6 6 5 1 6 5 83.4 70.3 1 1 8 2 1 0 80 64 65.9 34.1 5 3 15 14 0 2 0 0 https://www.skysports.com/football/crystal-palace-vs-everton/stats/446443 7th May 2022 5:30pm Amex Stadium h 31,637 6 4 3 0 42 58 17 15 6 5 7 7 4 3 78.6 84.6 3 1 7 6 3 3 81.8 84.6 40.9 59.1 5 1 13 9 0 2 0 0 https://www.skysports.com/football/brighton-and-hove-albion-vs-manchester-united/stats/446640"},{"location":"arvore-decisao/main/#divisao-dos-dados","title":"Divis\u00e3o dos Dados","text":"<p>Com a base pr\u00e9-processada, realizou-se a divis\u00e3o entre conjuntos de treinamento e teste. O objetivo dessa etapa \u00e9 garantir que o modelo seja avaliado em dados que ele nunca viu durante o treinamento, permitindo uma medida mais confi\u00e1vel de sua capacidade de generaliza\u00e7\u00e3o.  </p> <p>Foi utilizada a fun\u00e7\u00e3o <code>train_test_split</code> da biblioteca scikit-learn, com os seguintes crit\u00e9rios: - 70% dos dados destinados ao treinamento, para que o modelo aprenda os padr\u00f5es da base; - 30% dos dados destinados ao teste, para avaliar o desempenho em novos exemplos; - Estratifica\u00e7\u00e3o pelo alvo (<code>class</code>), garantindo que a propor\u00e7\u00e3o entre vit\u00f3rias do mandante, empates e vit\u00f3rias do visitante fosse mantida em ambos os conjuntos; - Random State fixado, assegurando reprodutibilidade na divis\u00e3o.  </p> <p>Dessa forma, o conjunto de treinamento foi usado para ajustar os par\u00e2metros da \u00e1rvore de decis\u00e3o, enquanto o conjunto de teste serviu para medir a precis\u00e3o e robustez do modelo.</p> <pre><code>import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ndf = pd.read_csv(\"./src/mydata.csv\")\n\n# Excluir as colunas n\u00e3o desejadas\ndf = df.drop(columns= [\"date\", \"clock\", \"links\", \"Goals Home\", \"Away Goals\", \"home_shots\", \"away_shots\", \"home_on\", \"away_on\",\n                        \"home_off\", \"away_off\", \"home_blocked\", \"away_blocked\", \"home_corners\", \"away_corners\", \n                        \"home_offside\", \"away_offside\", \"home_tackles\", \"away_tackles\", \"home_duels\", \"away_duels\",\n                        \"home_saves\", \"away_saves\", \"home_fouls\", \"away_fouls\", \"home_yellow\", \"away_yellow\",\n                        \"home_red\", \"away_red\"])\n\n# Label encoding dos estadios em texto\ndf[\"stadium\"] = label_encoder.fit_transform(df[\"stadium\"])\n\n# Transformar resultado do jogo times em n\u00fameros\ndf[\"class\"] = df[\"class\"].replace({'h':0, 'd': 1, 'a':2})\n\n# Transforma o p\u00fablido de string para n\u00famero\ndf[\"attendance\"] = df[\"attendance\"].str.replace(',', '').astype(int)\n\n# Vari\u00e1veis independentes (features)\nx = df[[\n    \"stadium\", \"attendance\",\n    \"Home Team\", \"Away Team\",\n    \"home_possessions\", \"away_possessions\",\n    \"home_pass\", \"away_pass\",\n    \"home_chances\", \"away_chances\"\n]]\n\n# Vari\u00e1vel dependente (alvo)\ny = df[\"class\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=27, stratify=y)\n</code></pre>"},{"location":"arvore-decisao/main/#treinamento-do-modelo","title":"Treinamento do Modelo","text":"Modelo da \u00c1rvorecode <p>Precis\u00e3o da Valida\u00e7\u00e3o: 0.47 Import\u00e2ncia das Features:  Feature Import\u00e2ncia 7 away_pass 0.160276 6 home_pass 0.152260 2 Home Team 0.116144 1 attendance 0.115863 9 away_chances 0.106053 3 Away Team 0.101649 8 home_chances 0.072009 4 home_possessions 0.069807 0 stadium 0.063873 5 away_possessions 0.042067 2025-10-28T14:01:09.767747 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ </p> <pre><code>import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ndf = pd.read_csv(\"./src/mydata.csv\")\n\n# Excluir as colunas n\u00e3o desejadas\ndf = df.drop(columns= [\"date\", \"clock\", \"links\", \"Goals Home\", \"Away Goals\", \"home_shots\", \"away_shots\", \"home_on\", \"away_on\",\n                        \"home_off\", \"away_off\", \"home_blocked\", \"away_blocked\", \"home_corners\", \"away_corners\", \n                        \"home_offside\", \"away_offside\", \"home_tackles\", \"away_tackles\", \"home_duels\", \"away_duels\",\n                        \"home_saves\", \"away_saves\", \"home_fouls\", \"away_fouls\", \"home_yellow\", \"away_yellow\",\n                        \"home_red\", \"away_red\"])\n\n# Label encoding dos estadios em texto\ndf[\"stadium\"] = label_encoder.fit_transform(df[\"stadium\"])\n\n# Transformar resultado do jogo times em n\u00fameros\ndf[\"class\"] = df[\"class\"].replace({'h':0, 'd': 1, 'a':2})\n\n# Transforma o p\u00fablido de string para n\u00famero\ndf[\"attendance\"] = df[\"attendance\"].str.replace(',', '').astype(int)\n\n# Vari\u00e1veis independentes (features)\nx = df[[\n    \"stadium\", \"attendance\",\n    \"Home Team\", \"Away Team\",\n    \"home_possessions\", \"away_possessions\",\n    \"home_pass\", \"away_pass\",\n    \"home_chances\", \"away_chances\"\n]]\n\n# Vari\u00e1vel dependente (alvo)\ny = df[\"class\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=27, stratify=y)\n\n# Criar e treinar o modelo de \u00e1rvore de decis\u00e3o\nclassifier = tree.DecisionTreeClassifier()\nclassifier.fit(x_train, y_train)\n\n# Avaliar o modelo\ny_pred = classifier.predict(x_test)\naccuracy = accuracy_score(y_test, y_pred)\nprint(f\"Precis\u00e3o da Valida\u00e7\u00e3o: {accuracy:.2f}\")\n\nfeature_importance = pd.DataFrame({\n    'Feature': classifier.feature_names_in_,\n    'Import\u00e2ncia': classifier.feature_importances_\n})\nprint(\"&lt;br&gt;Import\u00e2ncia das Features:\")\nprint(feature_importance.sort_values(by='Import\u00e2ncia', ascending=False).to_html())\n\nplt.figure(figsize=(20, 10))\ntree.plot_tree(classifier, max_depth=5, fontsize=10)\n\n# Para imprimir na p\u00e1gina HTML\nbuffer = StringIO()\nplt.savefig(buffer, format=\"svg\")\nprint(buffer.getvalue())    \n</code></pre>"},{"location":"arvore-decisao/main/#avaliacao-do-modelo","title":"Avalia\u00e7\u00e3o do Modelo","text":"<p>Ap\u00f3s o treinamento da \u00e1rvore de decis\u00e3o, o modelo foi avaliado no conjunto de teste, obtendo uma precis\u00e3o (accuracy) de aproximadamente 0.48. Esse valor mostra que o modelo acerta menos da metade das previs\u00f5es, o que indica uma performance limitada.  </p> <p>Contudo, esse resultado deve ser entendido \u00e0 luz da natureza do problema: prever o resultado de uma partida de futebol \u00e9 uma tarefa de alta complexidade e incerteza. Al\u00e9m das estat\u00edsticas presentes na base, fatores externos como clima, les\u00f5es, decis\u00f5es de arbitragem, motiva\u00e7\u00e3o individual e at\u00e9 elementos de acaso influenciam diretamente no desfecho do jogo. Mesmo com acesso a uma base de dados mais ampla, a previs\u00e3o exata de partidas continuaria sendo altamente incerta, pois o futebol n\u00e3o \u00e9 uma ci\u00eancia exata, mas um evento esportivo com vari\u00e1veis muitas vezes imprevis\u00edveis.  </p> <p>Algumas observa\u00e7\u00f5es complementares ajudam a interpretar esse desempenho: - Baixa capacidade preditiva: a \u00e1rvore n\u00e3o conseguiu capturar padr\u00f5es fortes o suficiente para discriminar corretamente as tr\u00eas classes (<code>h</code>, <code>d</code>, <code>a</code>). - Balanceamento do alvo: embora tenha sido aplicada estratifica\u00e7\u00e3o, empates tendem a ser mais raros e dif\u00edceis de prever, prejudicando a acur\u00e1cia global. - Vari\u00e1veis contextuais: as colunas usadas (como est\u00e1dio, p\u00fablico, posse de bola, passes e chances) explicam parte do comportamento da partida, mas n\u00e3o determinam o resultado sozinhas. - Complexidade inerente ao dom\u00ednio: a imprevisibilidade faz parte da pr\u00f3pria ess\u00eancia do futebol, o que limita naturalmente a capacidade de qualquer modelo estat\u00edstico atingir altas taxas de acerto.  </p> <p>Portanto, a precis\u00e3o de 0.48 reflete tanto as limita\u00e7\u00f5es do modelo quanto a complexidade do fen\u00f4meno analisado. O exerc\u00edcio \u00e9 v\u00e1lido n\u00e3o apenas para medir desempenho, mas para evidenciar os desafios de aplicar t\u00e9cnicas de Machine Learning em contextos de elevada incerteza como o esporte.</p>"},{"location":"arvore-decisao/main/#relatorio-final","title":"Relat\u00f3rio Final","text":"<p>O projeto teve como objetivo aplicar um algoritmo de \u00e1rvore de decis\u00e3o sobre uma base de partidas de futebol, explorando o uso de t\u00e9cnicas de Machine Learning em um contexto esportivo.  </p> <p>A an\u00e1lise foi conduzida em etapas bem definidas:</p> <ul> <li> <p>Explora\u00e7\u00e3o dos Dados (EDA): foram selecionadas e analisadas cerca de dez vari\u00e1veis relevantes, entre elas <code>stadium</code>, <code>attendance</code>, <code>Home Team</code>, <code>Away Team</code>, <code>home_possessions</code>, <code>away_possessions</code>, <code>home_pass</code>, <code>away_pass</code>, <code>home_chances</code> e <code>away_chances</code>. A partir de visualiza\u00e7\u00f5es e estat\u00edsticas descritivas, foi poss\u00edvel compreender melhor a natureza de cada coluna e avaliar o balanceamento da vari\u00e1vel alvo <code>class</code>, que representa o resultado da partida.  </p> </li> <li> <p>Pr\u00e9-processamento: nesta fase, colunas de identifica\u00e7\u00e3o e tempo (<code>date</code>, <code>clock</code>, <code>links</code>), bem como estat\u00edsticas diretamente ligadas ao resultado (como gols, finaliza\u00e7\u00f5es e cart\u00f5es), foram removidas para evitar vazamento de informa\u00e7\u00e3o. Al\u00e9m disso, foram realizadas convers\u00f5es de tipos e prepara\u00e7\u00e3o de vari\u00e1veis categ\u00f3ricas para futura codifica\u00e7\u00e3o num\u00e9rica.  </p> </li> <li> <p>Divis\u00e3o dos Dados: o conjunto foi separado em treino (70%) e teste (30%), com estratifica\u00e7\u00e3o do alvo para preservar a propor\u00e7\u00e3o entre vit\u00f3rias do mandante, empates e vit\u00f3rias do visitante. Essa divis\u00e3o assegurou reprodutibilidade e uma avalia\u00e7\u00e3o justa do modelo.  </p> </li> <li> <p>Treinamento e Avalia\u00e7\u00e3o: a \u00e1rvore de decis\u00e3o foi treinada com os dados de treino e avaliada no conjunto de teste. O modelo alcan\u00e7ou uma acur\u00e1cia de aproximadamente 0.48, valor que indica desempenho limitado, mas esperado dentro do contexto.  </p> </li> </ul> <p>A avalia\u00e7\u00e3o evidenciou alguns pontos importantes: - O modelo n\u00e3o conseguiu capturar padr\u00f5es suficientemente fortes, refletindo a alta complexidade da tarefa. - Empates, por serem menos frequentes, foram mais dif\u00edceis de prever, prejudicando a performance global. - As vari\u00e1veis selecionadas (contexto e estat\u00edsticas gerais) ajudam a caracterizar as partidas, mas n\u00e3o s\u00e3o determinantes para o resultado final. - O futebol, por sua pr\u00f3pria natureza, \u00e9 altamente imprevis\u00edvel e sujeito a vari\u00e1veis externas que n\u00e3o est\u00e3o presentes no dataset, como clima, arbitragem, les\u00f5es e fatores psicol\u00f3gicos.  </p>"},{"location":"arvore-decisao/main/#conclusao","title":"Conclus\u00e3o","text":"<p>A experi\u00eancia demonstrou que, embora seja poss\u00edvel aplicar t\u00e9cnicas de Machine Learning ao dom\u00ednio esportivo, os resultados precisam ser interpretados com cautela. O desempenho de 0.48 de acur\u00e1cia n\u00e3o deve ser visto apenas como limita\u00e7\u00e3o do modelo, mas tamb\u00e9m como reflexo da complexidade e da imprevisibilidade inerente ao futebol.  </p> <p>O projeto refor\u00e7a a import\u00e2ncia da an\u00e1lise explorat\u00f3ria, do cuidado no pr\u00e9-processamento para evitar vazamento de dados e da avalia\u00e7\u00e3o cr\u00edtica dos resultados. Al\u00e9m disso, abre espa\u00e7o para trabalhos futuros que explorem vari\u00e1veis adicionais \u2014 como forma recente dos times, desempenho de jogadores e fatores externos \u2014 e ajustes de hiperpar\u00e2metros para buscar melhorias no desempenho do modelo.  </p> <p>Mais do que prever com exatid\u00e3o os resultados, este trabalho mostra o potencial e os limites do uso de algoritmos de aprendizado de m\u00e1quina em contextos reais, nos quais a incerteza e a imprevisibilidade s\u00e3o componentes inevit\u00e1veis.</p>"},{"location":"k-means/main/","title":"K-Means","text":""},{"location":"k-means/main/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O objetivo desta etapa foi aplicar o algoritmo K-Means Clustering sobre a base de partidas de futebol da Premier League. Diferente dos modelos anteriores (\u00c1rvore de Decis\u00e3o e KNN), o K-Means \u00e9 um algoritmo n\u00e3o supervisionado, ou seja, n\u00e3o utiliza a vari\u00e1vel-alvo durante o treinamento. A proposta aqui \u00e9 identificar padr\u00f5es ocultos nos dados a partir de estat\u00edsticas das partidas \u2014 como posse de bola, passes, chances criadas, p\u00fablico e est\u00e1dio \u2014 e verificar como esses agrupamentos se relacionam com os resultados reais (<code>class</code>).  </p> <p>Para fins de visualiza\u00e7\u00e3o, os dados foram reduzidos para duas dimens\u00f5es via PCA, permitindo a representa\u00e7\u00e3o gr\u00e1fica dos clusters e seus centr\u00f3ides.</p>"},{"location":"k-means/main/#base-de-dados","title":"Base de dados","text":"<p>A base de dados utilizada neste projeto cont\u00e9m informa\u00e7\u00f5es de partidas de futebol, totalizando 1140 linhas e 40 colunas. Entre as vari\u00e1veis est\u00e3o posse de bola, n\u00famero de passes e chances criadas. A vari\u00e1vel alvo escolhida \u00e9 a coluna <code>class</code>, que indica o resultado da partida (vit\u00f3ria do mandante, empate ou vit\u00f3ria do visitante).</p>"},{"location":"k-means/main/#exploracao-dos-dados","title":"Explora\u00e7\u00e3o dos Dados","text":"<p>A seguir foi feita uma an\u00e1lise do significado e composi\u00e7\u00e3o de cada coluna presente na base, com a finalidade de identificar poss\u00edveis problemas a serem tratados posteriormente. As visualiza\u00e7\u00f5es e estat\u00edsticas descritivas ajudam a compreender a natureza dos dados e orientar decis\u00f5es de pr\u00e9-processamento e modelagem.</p> classattendancestadiumhome_possessionsaway_possessionsHome TeamAway Teamhome_passaway_passhome_chancesaway_chances <p>A coluna <code>class</code> \u00e9 a vari\u00e1vel alvo do projeto e representa o resultado da partida: vit\u00f3ria do mandante (\"h\"), empate (\"d\") ou vit\u00f3ria do visitante (\"a\").  Trata-se de uma vari\u00e1vel categ\u00f3rica com tr\u00eas poss\u00edveis valores, sendo o objeto de classifica\u00e7\u00e3o do modelo de \u00e1rvore de decis\u00e3o.  A an\u00e1lise explorat\u00f3ria dessa coluna \u00e9 essencial para observar o balanceamento do conjunto de dados, isto \u00e9, se h\u00e1 propor\u00e7\u00f5es semelhantes ou discrepantes entre os resultados poss\u00edveis.</p> 2025-10-28T14:01:10.829009 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>attendance</code> representa o p\u00fablico presente em cada partida, um indicador de contexto do jogo que pode refletir fatores como mando de campo, relev\u00e2ncia do confronto e engajamento da torcida. Em bases de futebol, o p\u00fablico tende a variar bastante entre est\u00e1dios e rodadas, podendo apresentar assimetria (jogos muito cheios em arenas grandes) e valores at\u00edpicos (cl\u00e1ssicos, finais).</p> <p>Do ponto de vista anal\u00edtico, \u00e9 uma vari\u00e1vel cont\u00ednua \u00fatil para observar a distribui\u00e7\u00e3o de torcedores ao longo das partidas e investigar rela\u00e7\u00f5es com o resultado (<code>class</code>).</p> 2025-10-28T14:01:10.901882 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>stadium</code> identifica o est\u00e1dio onde a partida foi disputada. Trata-se de uma vari\u00e1vel categ\u00f3rica, associada ao contexto e \u00e0 capacidade do local, podendo refletir fatores como mando de campo, perfil da torcida, relevo do gramado e at\u00e9 particularidades log\u00edsticas.  Na an\u00e1lise explorat\u00f3ria, \u00e9 \u00fatil observar a frequ\u00eancia de jogos por est\u00e1dio, verificando balanceamento da amostra (quais arenas t\u00eam mais/menos partidas) e poss\u00edveis vieses (ex.: concentra\u00e7\u00e3o em poucos est\u00e1dios).  Rela\u00e7\u00f5es mais profundas com o resultado (<code>class</code>) podem ser investigadas em etapas seguintes, mas aqui focamos em entender a composi\u00e7\u00e3o dessa vari\u00e1vel no conjunto de dados.</p> 2025-10-28T14:01:11.090516 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_possessions</code> representa a porcentagem de posse de bola do time mandante em cada partida.  Trata-se de uma vari\u00e1vel num\u00e9rica cont\u00ednua, normalmente variando entre 30% e 70% na maioria dos jogos, podendo indicar estilos de jogo (times que mant\u00eam a bola ou que jogam mais reativamente).  A an\u00e1lise explorat\u00f3ria dessa vari\u00e1vel permite observar a distribui\u00e7\u00e3o da posse de bola entre os mandantes, identificar valores at\u00edpicos e comparar a m\u00e9dia do controle de jogo ao longo das rodadas.  Posteriormente, poder\u00e1 ser interessante relacionar essa posse com o resultado final (<code>class</code>) para verificar padr\u00f5es.</p> 2025-10-28T14:01:11.274978 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_possessions</code> representa a porcentagem de posse de bola do time visitante em cada partida.  Por ser uma vari\u00e1vel num\u00e9rica cont\u00ednua, sua distribui\u00e7\u00e3o ajuda a observar o comportamento dos visitantes em termos de controle de jogo, identificar valores at\u00edpicos e comparar a tend\u00eancia m\u00e9dia de posse fora de casa.  Em etapas posteriores, pode ser relacionada ao resultado (<code>class</code>) para investigar padr\u00f5es de desempenho como visitante.</p> 2025-10-28T14:01:11.422511 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>Home Team</code> identifica o time mandante na partida. Embora esteja codificada numericamente no dataset, sua natureza \u00e9 categ\u00f3rica (IDs de times).  Na an\u00e1lise explorat\u00f3ria, \u00e9 \u00fatil observar a frequ\u00eancia de jogos por mandante, verificando o balanceamento da amostra entre os times que atuam em casa e poss\u00edveis concentra\u00e7\u00f5es.  Rela\u00e7\u00f5es com o resultado (<code>class</code>) podem ser exploradas depois; aqui focamos em entender a composi\u00e7\u00e3o dessa vari\u00e1vel.</p> 2025-10-28T14:01:11.587210 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>Away Team</code> identifica o time visitante na partida. Apesar de codificada como n\u00famero, sua natureza \u00e9 categ\u00f3rica (IDs de times).  Na an\u00e1lise explorat\u00f3ria, observar a frequ\u00eancia de jogos por visitante ajuda a avaliar o balanceamento da amostra e poss\u00edveis concentra\u00e7\u00f5es de partidas em determinados clubes.</p> 2025-10-28T14:01:11.773931 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_pass</code> indica o n\u00famero de passes realizados pelo time mandante em cada partida.  \u00c9 uma vari\u00e1vel num\u00e9rica cont\u00ednua que ajuda a caracterizar o estilo de jogo do mandante, podendo variar bastante entre equipes mais ou menos dependentes da posse de bola.  Na an\u00e1lise explorat\u00f3ria, observar a distribui\u00e7\u00e3o dos passes permite identificar m\u00e9dias, dispers\u00e3o e valores at\u00edpicos.</p> 2025-10-28T14:01:11.933615 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_pass</code> indica o n\u00famero de passes realizados pelo time visitante em cada partida.  Sendo uma vari\u00e1vel num\u00e9rica cont\u00ednua, sua distribui\u00e7\u00e3o mostra como os visitantes se comportam em termos de constru\u00e7\u00e3o de jogadas e controle de posse fora de casa.  A an\u00e1lise explorat\u00f3ria ajuda a entender a m\u00e9dia de passes, varia\u00e7\u00f5es entre os jogos e eventuais valores extremos.</p> 2025-10-28T14:01:12.069979 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_chances</code> representa a quantidade de chances de gol criadas pelo time mandante durante a partida.  \u00c9 uma vari\u00e1vel num\u00e9rica discreta que indica o n\u00edvel de ofensividade da equipe jogando em casa.  A an\u00e1lise explorat\u00f3ria permite identificar a frequ\u00eancia de jogos com poucas ou muitas oportunidades e verificar a dispers\u00e3o desse tipo de estat\u00edstica.</p> 2025-10-28T14:01:12.320736 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_chances</code> indica a quantidade de chances de gol criadas pelo time visitante durante a partida.  \u00c9 uma vari\u00e1vel num\u00e9rica discreta que ajuda a compreender a ofensividade dos times jogando fora de casa.  A an\u00e1lise explorat\u00f3ria mostra como os visitantes se comportam em termos de cria\u00e7\u00e3o de oportunidades, permitindo identificar padr\u00f5es de equil\u00edbrio ou diferen\u00e7as marcantes em rela\u00e7\u00e3o aos mandantes.</p> 2025-10-28T14:01:12.458550 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/"},{"location":"k-means/main/#pre-processamento","title":"Pr\u00e9-processamento","text":"<p>Ap\u00f3s a explora\u00e7\u00e3o inicial da base, foram aplicados procedimentos de pr\u00e9-processamento para preparar os dados para o treinamento do modelo. Entre as etapas realizadas est\u00e3o:</p> <ul> <li>Convers\u00e3o de tipos: vari\u00e1veis originalmente em texto com valores num\u00e9ricos (como <code>attendance</code>) foram transformadas em formato num\u00e9rico.  </li> <li>Tratamento de valores categ\u00f3ricos: colunas como <code>stadium</code>, <code>Home Team</code> e <code>Away Team</code> foram mantidas como categ\u00f3ricas, sendo posteriormente convertidas em vari\u00e1veis num\u00e9ricas por meio de t\u00e9cnicas de codifica\u00e7\u00e3o.  </li> <li>Remo\u00e7\u00e3o de colunas irrelevantes ou redundantes: colunas de identifica\u00e7\u00e3o e de tempo (<code>date</code>, <code>clock</code>, <code>links</code>), bem como estat\u00edsticas que representam vazamento de informa\u00e7\u00e3o do resultado (ex.: <code>Goals Home</code>, <code>Away Goals</code>), foram descartadas do conjunto de treino.  </li> <li>Separa\u00e7\u00e3o entre features e target: as vari\u00e1veis explicativas (<code>X</code>) foram definidas a partir de aproximadamente dez colunas relevantes da base, enquanto a vari\u00e1vel alvo (<code>y</code>) \u00e9 a coluna <code>class</code>.  </li> <li>Divis\u00e3o em treino e teste: o conjunto de dados foi dividido em duas partes, garantindo estratifica\u00e7\u00e3o do alvo para manter o equil\u00edbrio das classes.</li> </ul> Base preparadacodeBase original stadium class attendance Home Team Away Team home_possessions away_possessions home_pass away_pass home_chances away_chances 5 2 0 10 11 64.2 35.8 89.3 80.9 0 4 6 2 0 19 18 67.5 62.5 84.7 69.9 3 3 1 2 31475 6 7 66.5 33.5 87.7 78.9 1 1 22 2 0 23 8 38.3 61.7 74.2 84.2 1 1 23 1 20650 21 4 52.2 47.8 76.9 76.4 1 3 12 2 31658 13 3 45.7 54.3 76.4 81.2 0 1 10 0 17051 9 20 48.3 51.7 69.2 75.6 3 1 17 2 39061 12 9 70.6 29.4 90.8 71.9 2 3 13 0 0 3 19 41.5 58.5 77.1 83.3 5 2 8 0 53319 1 12 55.7 44.3 86 84.5 1 1 12 2 0 13 24 67.8 32.2 83.2 67 1 1 <pre><code>import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ndf = pd.read_csv(\"./src/mydata.csv\")\n\n# Excluir as colunas n\u00e3o desejadas\ndf = df.drop(columns= [\"date\", \"clock\", \"links\", \"Goals Home\", \"Away Goals\", \"home_shots\", \"away_shots\", \"home_on\", \"away_on\",\n                        \"home_off\", \"away_off\", \"home_blocked\", \"away_blocked\", \"home_corners\", \"away_corners\", \n                        \"home_offside\", \"away_offside\", \"home_tackles\", \"away_tackles\", \"home_duels\", \"away_duels\",\n                        \"home_saves\", \"away_saves\", \"home_fouls\", \"away_fouls\", \"home_yellow\", \"away_yellow\",\n                        \"home_red\", \"away_red\"])\n\n# Label encoding dos estadios em texto\ndf[\"stadium\"] = label_encoder.fit_transform(df[\"stadium\"])\n\n# Transformar resultado do jogo times em n\u00fameros\ndf[\"class\"] = df[\"class\"].replace({'h':0, 'd': 1, 'a':2})\n\n# Transforma o p\u00fablido de string para n\u00famero\ndf[\"attendance\"] = df[\"attendance\"].str.replace(',', '').astype(int)\n\nprint(df.sample(frac=.01).to_markdown(index=False))\n</code></pre> date clock stadium class attendance Home Team Goals Home Away Team Away Goals home_possessions away_possessions home_shots away_shots home_on away_on home_off away_off home_blocked away_blocked home_pass away_pass home_chances away_chances home_corners away_corners home_offside away_offside home_tackles away_tackles home_duels away_duels home_saves away_saves home_fouls away_fouls home_yellow away_yellow home_red away_red links 13th November 2022 2:00pm Amex Stadium a 31,581 6 1 7 2 65.1 34.9 7 8 2 2 1 3 4 3 86.3 72 1 0 11 4 3 1 42.9 52.2 55.6 44.4 0 1 14 11 2 7 0 0 https://www.skysports.com/football/brighton-and-hove-albion-vs-aston-villa/464786 9/5/2021 12:00pm Molineux h 0 13 2 6 1 60.7 39.3 16 5 6 3 3 1 7 1 88.9 82.3 1 0 10 5 0 2 57.1 66.7 21.7 78.3 2 4 12 7 2 2 0 2 https://www.skysports.com/football/wolverhampton-wanderers-vs-brighton-and-hove-albion/stats/429186 8/11/2020 12:00pm The Hawthorns a 0 24 0 8 1 41.2 58.8 12 19 2 5 7 6 3 8 66.5 78.1 1 2 9 6 1 1 73.7 62.5 64.6 35.4 4 2 17 12 1 0 0 0 https://www.skysports.com/football/west-bromwich-albion-vs-tottenham-hotspur/stats/428915 20th May 2023 12:30p Tottenham Hotspur Stadium a 61,514 8 1 9 3 61.8 38.2 22 11 8 4 6 6 8 1 86.2 77.7 2 2 8 2 1 1 50 54.5 59.1 40.9 1 6 11 9 1 1 0 0 https://www.skysports.com/football/tottenham-hotspur-vs-brentford/465002 18/01/2021 8:00pm Emirates Stadium h 0 2 3 4 0 66.4 33.6 20 4 6 1 11 2 3 1 89.9 74.9 2 0 7 2 4 1 71.4 36.4 36 64 1 3 9 8 0 0 0 0 https://www.skysports.com/football/arsenal-vs-newcastle-united/stats/429017 27/11/2020 8:00pm Selhurst Park a 0 11 0 4 2 57.4 42.6 12 14 3 7 8 5 1 2 82.1 73.6 1 2 7 3 0 0 53.3 45.8 54.9 45.1 5 3 9 10 2 2 0 0 https://www.skysports.com/football/crystal-palace-vs-newcastle-united/stats/428930 15th April 2023 3:00pm St. Mary's Stadium a 30,309 20 0 11 2 58.2 41.8 11 10 4 2 4 4 3 4 84.2 75.7 1 0 6 2 3 1 46.7 77.3 58.8 41.2 0 4 6 13 3 1 0 0 https://www.skysports.com/football/southampton-vs-crystal-palace/464941 19th December 2021 2:00pm St James' Park, Newcastle a 52,127 4 0 1 4 28.1 71.9 5 18 1 7 4 8 0 3 81.1 91.1 0 5 3 6 4 2 53.8 47.6 60 40 3 1 9 6 1 2 0 0 https://www.skysports.com/football/newcastle-united-vs-manchester-city/stats/446462 26/01/2021 8:15pm St. Mary's Stadium a 0 20 1 2 3 58 42 13 9 5 5 5 4 3 0 85.4 77.3 0 4 4 5 2 2 64.7 53.3 47.6 52.4 1 4 11 6 1 2 0 0 https://www.skysports.com/football/southampton-vs-arsenal/stats/429035 18th February 2023 3:00pm Goodison Park h 39,232 17 1 19 0 50 50 15 8 6 0 7 4 2 4 73.4 69 2 1 6 4 1 0 56.5 58.3 47.4 52.6 0 3 8 6 2 3 0 0 https://www.skysports.com/football/everton-vs-leeds-united/464869 18th September 2022 12:00p Gtech Community Stadium a 17,122 9 0 2 3 36.1 63.9 5 13 2 7 3 4 0 2 74.1 86 1 2 3 3 3 1 61.9 75 72.4 27.6 4 2 10 10 0 2 0 0 https://www.skysports.com/football/brentford-vs-arsenal/464706"},{"location":"k-means/main/#divisao-dos-dados","title":"Divis\u00e3o dos Dados","text":"<p>Com a base pr\u00e9-processada, realizou-se a divis\u00e3o entre conjuntos de treinamento e teste. O objetivo dessa etapa \u00e9 garantir que o modelo seja avaliado em dados que ele nunca viu durante o treinamento, permitindo uma medida mais confi\u00e1vel de sua capacidade de generaliza\u00e7\u00e3o.  </p> <p>Foi utilizada a fun\u00e7\u00e3o <code>train_test_split</code> da biblioteca scikit-learn, com os seguintes crit\u00e9rios: - 70% dos dados destinados ao treinamento, para que o modelo aprenda os padr\u00f5es da base; - 30% dos dados destinados ao teste, para avaliar o desempenho em novos exemplos; - Estratifica\u00e7\u00e3o pelo alvo (<code>class</code>), garantindo que a propor\u00e7\u00e3o entre vit\u00f3rias do mandante, empates e vit\u00f3rias do visitante fosse mantida em ambos os conjuntos; - Random State fixado, assegurando reprodutibilidade na divis\u00e3o.  </p> <pre><code>import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ndf = pd.read_csv(\"./src/mydata.csv\")\n\n# Excluir as colunas n\u00e3o desejadas\ndf = df.drop(columns= [\"date\", \"clock\", \"links\", \"Goals Home\", \"Away Goals\", \"home_shots\", \"away_shots\", \"home_on\", \"away_on\",\n                        \"home_off\", \"away_off\", \"home_blocked\", \"away_blocked\", \"home_corners\", \"away_corners\", \n                        \"home_offside\", \"away_offside\", \"home_tackles\", \"away_tackles\", \"home_duels\", \"away_duels\",\n                        \"home_saves\", \"away_saves\", \"home_fouls\", \"away_fouls\", \"home_yellow\", \"away_yellow\",\n                        \"home_red\", \"away_red\"])\n\n# Label encoding dos estadios em texto\ndf[\"stadium\"] = label_encoder.fit_transform(df[\"stadium\"])\n\n# Transformar resultado do jogo times em n\u00fameros\ndf[\"class\"] = df[\"class\"].replace({'h':0, 'd': 1, 'a':2})\n\n# Transforma o p\u00fablido de string para n\u00famero\ndf[\"attendance\"] = df[\"attendance\"].str.replace(',', '').astype(int)\n\n# Vari\u00e1veis independentes (features)\nx = df[[\n    \"stadium\", \"attendance\",\n    \"Home Team\", \"Away Team\",\n    \"home_possessions\", \"away_possessions\",\n    \"home_pass\", \"away_pass\",\n    \"home_chances\", \"away_chances\"\n]]\n\n# Vari\u00e1vel dependente (alvo)\ny = df[\"class\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=27, stratify=y)\n</code></pre>"},{"location":"k-means/main/#treinamento-do-modelo","title":"Treinamento do Modelo","text":"<p>O modelo foi treinado com 3 clusters, em refer\u00eancia \u00e0s tr\u00eas classes poss\u00edveis do resultado da partida: vit\u00f3ria do mandante, empate e vit\u00f3ria do visitante.  </p> <p>Ap\u00f3s o pr\u00e9-processamento (padroniza\u00e7\u00e3o das vari\u00e1veis num\u00e9ricas e transforma\u00e7\u00e3o das categ\u00f3ricas em dummies), o algoritmo K-Means foi aplicado sobre os dados transformados. Em seguida, os dados foram projetados em duas dimens\u00f5es com PCA para permitir a visualiza\u00e7\u00e3o gr\u00e1fica.  </p> <p>Na figura abaixo \u00e9 poss\u00edvel observar a forma\u00e7\u00e3o dos tr\u00eas clusters identificados pelo algoritmo e seus respectivos centr\u00f3ides (em vermelho):</p> ModeloC\u00f3digo <p> </p> <pre><code>import base64\nfrom io import BytesIO\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\n\ndf = pd.read_csv(\"./src/mydata.csv\")\n\nnum_cols = [\n    \"attendance\",\n    \"home_possessions\", \"away_possessions\",\n    \"home_pass\", \"away_pass\",\n    \"home_chances\", \"away_chances\",\n]\ncat_cols = [\"stadium\", \"Home Team\", \"Away Team\"]\n\ndf[\"attendance\"] = (\n    df[\"attendance\"].astype(str).str.replace(r\"[^0-9]\", \"\", regex=True).replace(\"\", \"0\").astype(float)\n)\nfor c in num_cols:\n    df[c] = pd.to_numeric(df[c], errors=\"coerce\").fillna(df[c].median())\n\nX_cat = pd.get_dummies(\n    df[cat_cols].astype(str).apply(lambda s: s.str.strip()),\n    drop_first=False, dtype=int\n)\n\nscaler = StandardScaler()\nX_num = df[num_cols].copy()\nX_num[num_cols] = scaler.fit_transform(X_num[num_cols])\n\nX = pd.concat([X_num, X_cat], axis=1).values\n\npca = PCA(n_components=2)\nX_pca = pca.fit_transform(X)\n\nkmeans = KMeans(n_clusters=3, init=\"k-means++\", max_iter=300, n_init=10, random_state=42)\nlabels = kmeans.fit_predict(X_pca)\n\nplt.figure(figsize=(12, 10))\nplt.scatter(X_pca[:, 0], X_pca[:, 1], c=labels, cmap=\"viridis\", s=50)\nplt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1],\n            c=\"red\", marker=\"*\", s=220, label=\"Centroids\")\nplt.title(\"K-Means Clustering (Football Matches) - PCA 2D\")\nplt.xlabel(\"PCA 1\")\nplt.ylabel(\"PCA 2\")\nplt.legend()\n\nbuf = BytesIO()\nplt.savefig(buf, format=\"png\", transparent=True, bbox_inches=\"tight\")\nbuf.seek(0)\nimg_base64 = base64.b64encode(buf.read()).decode(\"utf-8\")\nhtml_img = f'&lt;img src=\"data:image/png;base64,{img_base64}\" alt=\"KMeans clustering\" /&gt;'\nprint(html_img)\n</code></pre> <p>Esse resultado mostra que o algoritmo conseguiu dividir os dados em agrupamentos distintos, mas com fronteiras de separa\u00e7\u00e3o difusas, j\u00e1 que as estat\u00edsticas utilizadas n\u00e3o garantem divis\u00f5es claras entre os diferentes resultados das partidas.</p>"},{"location":"k-means/main/#avaliacao-do-modelo","title":"Avalia\u00e7\u00e3o do Modelo","text":"<p>Para avaliar a qualidade do clustering, os r\u00f3tulos de clusters foram mapeados para as classes reais (<code>class</code>) por meio de um voto majorit\u00e1rio dentro de cada grupo. Dessa forma, foi poss\u00edvel calcular m\u00e9tricas de classifica\u00e7\u00e3o mesmo em um cen\u00e1rio originalmente n\u00e3o supervisionado.  </p> <p>O modelo obteve uma acur\u00e1cia aproximada de 47.92%, com a seguinte matriz de confus\u00e3o:</p> ResultadoC\u00f3digo <p>Acur\u00e1cia: 47.92% Matriz de Confus\u00e3o:  Classe Pred 0 Classe Pred 1 Classe Pred 2 Classe Real 0 254 0 141 Classe Real 1 107 0 98 Classe Real 2 129 0 183 </p> <pre><code>import pandas as pd\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\n\ndf = pd.read_csv(\"./src/mydata.csv\")\n\nnum_cols = [\n    \"attendance\",\n    \"home_possessions\", \"away_possessions\",\n    \"home_pass\", \"away_pass\",\n    \"home_chances\", \"away_chances\",\n]\ncat_cols = [\"stadium\", \"Home Team\", \"Away Team\"]\ntarget = \"class\"\n\ndf[\"attendance\"] = (\n    df[\"attendance\"]\n      .astype(str)\n      .str.replace(r\"[^0-9]\", \"\", regex=True)\n      .replace(\"\", \"0\")\n      .astype(float)\n)\nfor c in num_cols:\n    df[c] = pd.to_numeric(df[c], errors=\"coerce\")\n    df[c] = df[c].fillna(df[c].median())\n\nX_cat = pd.get_dummies(\n    df[cat_cols].astype(str).apply(lambda s: s.str.strip()),\n    drop_first=False, dtype=int\n)\n\nscaler = StandardScaler()\nX_num = df[num_cols].copy()\nX_num[num_cols] = scaler.fit_transform(X_num[num_cols])\n\nX = pd.concat([X_num, X_cat], axis=1).values\ny_map = {\"h\": 0, \"d\": 1, \"a\": 2}\ny = df[target].astype(str).str.strip().map(y_map).astype(int).values\n\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=42, stratify=y\n)\n\npca = PCA(n_components=2)\nX_train_pca = pca.fit_transform(X_train)\n\nkmeans = KMeans(n_clusters=3, init=\"k-means++\", max_iter=300, n_init=10, random_state=42)\nlabels = kmeans.fit_predict(X_train_pca)\n\ncluster_map = {}\nclasses = np.unique(y_train)\nfor c in np.unique(labels):\n    mask = labels == c\n    if mask.sum() == 0:\n        cluster_map[c] = classes[0]\n        continue\n    counts = np.bincount(y_train[mask], minlength=classes.max()+1)\n    majority = counts.argmax()\n    cluster_map[c] = majority\n\ny_pred_train = np.array([cluster_map[c] for c in labels])\nacc = accuracy_score(y_train, y_pred_train)\ncm = confusion_matrix(y_train, y_pred_train, labels=np.sort(classes))\n\ncm_df = pd.DataFrame(\n    cm,\n    index=[f\"Classe Real {cls}\" for cls in np.sort(classes)],\n    columns=[f\"Classe Pred {cls}\" for cls in np.sort(classes)]\n)\n\nprint(f\"Acur\u00e1cia: {acc*100:.2f}%\")\nprint(\"&lt;br&gt;Matriz de Confus\u00e3o:\")\nprint(cm_df.to_html(index=True))\n</code></pre> <p>As observa\u00e7\u00f5es principais s\u00e3o:</p> <ul> <li>O algoritmo conseguiu capturar alguns padr\u00f5es nas vit\u00f3rias do mandante (Classe 0) e visitante (Classe 2), mas ainda houve bastante confus\u00e3o entre elas.  </li> <li>A classe de empate (Classe 1) foi a mais dif\u00edcil de identificar, refletindo sua baixa frequ\u00eancia no dataset e a sobreposi\u00e7\u00e3o natural entre vari\u00e1veis.  </li> <li>A visualiza\u00e7\u00e3o em 2D refor\u00e7a essa dificuldade, mostrando que as fronteiras entre grupos s\u00e3o pouco definidas.</li> </ul>"},{"location":"k-means/main/#relatorio-final","title":"Relat\u00f3rio Final","text":"<p>O experimento com K-Means evidenciou os desafios de aplicar t\u00e9cnicas n\u00e3o supervisionadas no dom\u00ednio esportivo:  </p> <ul> <li>Explora\u00e7\u00e3o: foram utilizadas vari\u00e1veis contextuais (est\u00e1dio, p\u00fablico) e estat\u00edsticas gerais (posse, passes, chances), previamente normalizadas e transformadas em num\u00e9ricas.  </li> <li>Treinamento: o K-Means gerou 3 clusters, interpretados como padr\u00f5es de desempenho relacionados ao resultado da partida.  </li> <li>Avalia\u00e7\u00e3o: ao comparar clusters com classes reais, a acur\u00e1cia foi de ~47.9%, valor semelhante aos modelos supervisionados, mas com maiores limita\u00e7\u00f5es na interpreta\u00e7\u00e3o.  </li> </ul> <p>Alguns pontos importantes emergem da an\u00e1lise: - O K-Means n\u00e3o tem acesso direto \u00e0s classes, e portanto os agrupamentos n\u00e3o correspondem necessariamente a vit\u00f3rias, empates ou derrotas. - A sobreposi\u00e7\u00e3o natural dos dados mostra que estat\u00edsticas gerais de jogo n\u00e3o s\u00e3o suficientes para definir fronteiras claras entre resultados. - O futebol continua sendo altamente imprevis\u00edvel, com vari\u00e1veis externas (clima, arbitragem, forma dos jogadores, estrat\u00e9gia) que n\u00e3o est\u00e3o refletidas na base.  </p>"},{"location":"k-means/main/#conclusao","title":"Conclus\u00e3o","text":"<p>O uso do K-Means neste projeto demonstrou o potencial dos algoritmos n\u00e3o supervisionados para explorar padr\u00f5es em conjuntos de dados complexos, mas tamb\u00e9m refor\u00e7ou suas limita\u00e7\u00f5es frente a tarefas de previs\u00e3o. A acur\u00e1cia de ~47.9% mostra que, mesmo quando os clusters s\u00e3o posteriormente relacionados \u00e0s classes reais, o modelo n\u00e3o consegue separar bem as situa\u00e7\u00f5es de vit\u00f3ria, empate e derrota.  </p> <p>Assim como nos experimentos anteriores, o aprendizado principal n\u00e3o est\u00e1 apenas no valor num\u00e9rico da m\u00e9trica, mas no entendimento de que nem todo fen\u00f4meno pode ser descrito por padr\u00f5es lineares ou consistentes. Esse resultado abre espa\u00e7o para trabalhos futuros, como o uso de modelos h\u00edbridos (combinando supervisionados e n\u00e3o supervisionados) ou a incorpora\u00e7\u00e3o de vari\u00e1veis mais ricas, como desempenho de jogadores, estat\u00edsticas avan\u00e7adas e fatores contextuais adicionais.</p>"},{"location":"knn/main/","title":"KNN","text":""},{"location":"knn/main/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O objetivo desta etapa foi aplicar o algoritmo K-Nearest Neighbors (KNN) sobre a base de dados de partidas de futebol, utilizando as bibliotecas <code>pandas</code>, <code>numpy</code>, <code>matplotlib</code> e <code>scikit-learn</code>. Diferente da \u00e1rvore de decis\u00e3o, o KNN classifica novas observa\u00e7\u00f5es com base na proximidade de exemplos j\u00e1 conhecidos. A proposta \u00e9 avaliar como vari\u00e1veis como est\u00e1dio, p\u00fablico, posse de bola, passes e chances criadas podem auxiliar na previs\u00e3o do resultado da partida (<code>class</code>). Foram desenvolvidas duas abordagens: uma implementa\u00e7\u00e3o manual, para consolidar a compreens\u00e3o do funcionamento do m\u00e9todo, e outra com a biblioteca scikit-learn, permitindo compara\u00e7\u00e3o de resultados e visualiza\u00e7\u00e3o da fronteira de decis\u00e3o por meio do PCA.</p>"},{"location":"knn/main/#base-de-dados","title":"Base de dados","text":"<p>A base de dados utilizada neste projeto cont\u00e9m informa\u00e7\u00f5es de partidas de futebol, totalizando 1140 linhas e 40 colunas. Entre as vari\u00e1veis est\u00e3o posse de bola, n\u00famero de passes e chances criadas. A vari\u00e1vel alvo escolhida \u00e9 a coluna <code>class</code>, que indica o resultado da partida (vit\u00f3ria do mandante, empate ou vit\u00f3ria do visitante).</p>"},{"location":"knn/main/#exploracao-dos-dados","title":"Explora\u00e7\u00e3o dos Dados","text":"<p>A seguir foi feita uma an\u00e1lise do significado e composi\u00e7\u00e3o de cada coluna presente na base, com a finalidade de identificar poss\u00edveis problemas a serem tratados posteriormente. As visualiza\u00e7\u00f5es e estat\u00edsticas descritivas ajudam a compreender a natureza dos dados e orientar decis\u00f5es de pr\u00e9-processamento e modelagem.</p> classattendancestadiumhome_possessionsaway_possessionsHome TeamAway Teamhome_passaway_passhome_chancesaway_chances <p>A coluna <code>class</code> \u00e9 a vari\u00e1vel alvo do projeto e representa o resultado da partida: vit\u00f3ria do mandante (\"h\"), empate (\"d\") ou vit\u00f3ria do visitante (\"a\").  Trata-se de uma vari\u00e1vel categ\u00f3rica com tr\u00eas poss\u00edveis valores, sendo o objeto de classifica\u00e7\u00e3o do modelo de \u00e1rvore de decis\u00e3o.  A an\u00e1lise explorat\u00f3ria dessa coluna \u00e9 essencial para observar o balanceamento do conjunto de dados, isto \u00e9, se h\u00e1 propor\u00e7\u00f5es semelhantes ou discrepantes entre os resultados poss\u00edveis.</p> 2025-10-28T14:01:13.230886 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>attendance</code> representa o p\u00fablico presente em cada partida, um indicador de contexto do jogo que pode refletir fatores como mando de campo, relev\u00e2ncia do confronto e engajamento da torcida. Em bases de futebol, o p\u00fablico tende a variar bastante entre est\u00e1dios e rodadas, podendo apresentar assimetria (jogos muito cheios em arenas grandes) e valores at\u00edpicos (cl\u00e1ssicos, finais).</p> <p>Do ponto de vista anal\u00edtico, \u00e9 uma vari\u00e1vel cont\u00ednua \u00fatil para observar a distribui\u00e7\u00e3o de torcedores ao longo das partidas e investigar rela\u00e7\u00f5es com o resultado (<code>class</code>).</p> 2025-10-28T14:01:13.304750 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>stadium</code> identifica o est\u00e1dio onde a partida foi disputada. Trata-se de uma vari\u00e1vel categ\u00f3rica, associada ao contexto e \u00e0 capacidade do local, podendo refletir fatores como mando de campo, perfil da torcida, relevo do gramado e at\u00e9 particularidades log\u00edsticas.  Na an\u00e1lise explorat\u00f3ria, \u00e9 \u00fatil observar a frequ\u00eancia de jogos por est\u00e1dio, verificando balanceamento da amostra (quais arenas t\u00eam mais/menos partidas) e poss\u00edveis vieses (ex.: concentra\u00e7\u00e3o em poucos est\u00e1dios).  Rela\u00e7\u00f5es mais profundas com o resultado (<code>class</code>) podem ser investigadas em etapas seguintes, mas aqui focamos em entender a composi\u00e7\u00e3o dessa vari\u00e1vel no conjunto de dados.</p> 2025-10-28T14:01:13.487655 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_possessions</code> representa a porcentagem de posse de bola do time mandante em cada partida.  Trata-se de uma vari\u00e1vel num\u00e9rica cont\u00ednua, normalmente variando entre 30% e 70% na maioria dos jogos, podendo indicar estilos de jogo (times que mant\u00eam a bola ou que jogam mais reativamente).  A an\u00e1lise explorat\u00f3ria dessa vari\u00e1vel permite observar a distribui\u00e7\u00e3o da posse de bola entre os mandantes, identificar valores at\u00edpicos e comparar a m\u00e9dia do controle de jogo ao longo das rodadas.  Posteriormente, poder\u00e1 ser interessante relacionar essa posse com o resultado final (<code>class</code>) para verificar padr\u00f5es.</p> 2025-10-28T14:01:13.667832 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_possessions</code> representa a porcentagem de posse de bola do time visitante em cada partida.  Por ser uma vari\u00e1vel num\u00e9rica cont\u00ednua, sua distribui\u00e7\u00e3o ajuda a observar o comportamento dos visitantes em termos de controle de jogo, identificar valores at\u00edpicos e comparar a tend\u00eancia m\u00e9dia de posse fora de casa.  Em etapas posteriores, pode ser relacionada ao resultado (<code>class</code>) para investigar padr\u00f5es de desempenho como visitante.</p> 2025-10-28T14:01:13.802619 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>Home Team</code> identifica o time mandante na partida. Embora esteja codificada numericamente no dataset, sua natureza \u00e9 categ\u00f3rica (IDs de times).  Na an\u00e1lise explorat\u00f3ria, \u00e9 \u00fatil observar a frequ\u00eancia de jogos por mandante, verificando o balanceamento da amostra entre os times que atuam em casa e poss\u00edveis concentra\u00e7\u00f5es.  Rela\u00e7\u00f5es com o resultado (<code>class</code>) podem ser exploradas depois; aqui focamos em entender a composi\u00e7\u00e3o dessa vari\u00e1vel.</p> 2025-10-28T14:01:13.962736 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>Away Team</code> identifica o time visitante na partida. Apesar de codificada como n\u00famero, sua natureza \u00e9 categ\u00f3rica (IDs de times).  Na an\u00e1lise explorat\u00f3ria, observar a frequ\u00eancia de jogos por visitante ajuda a avaliar o balanceamento da amostra e poss\u00edveis concentra\u00e7\u00f5es de partidas em determinados clubes.</p> 2025-10-28T14:01:14.148779 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_pass</code> indica o n\u00famero de passes realizados pelo time mandante em cada partida.  \u00c9 uma vari\u00e1vel num\u00e9rica cont\u00ednua que ajuda a caracterizar o estilo de jogo do mandante, podendo variar bastante entre equipes mais ou menos dependentes da posse de bola.  Na an\u00e1lise explorat\u00f3ria, observar a distribui\u00e7\u00e3o dos passes permite identificar m\u00e9dias, dispers\u00e3o e valores at\u00edpicos.</p> 2025-10-28T14:01:14.307195 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_pass</code> indica o n\u00famero de passes realizados pelo time visitante em cada partida.  Sendo uma vari\u00e1vel num\u00e9rica cont\u00ednua, sua distribui\u00e7\u00e3o mostra como os visitantes se comportam em termos de constru\u00e7\u00e3o de jogadas e controle de posse fora de casa.  A an\u00e1lise explorat\u00f3ria ajuda a entender a m\u00e9dia de passes, varia\u00e7\u00f5es entre os jogos e eventuais valores extremos.</p> 2025-10-28T14:01:14.437516 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_chances</code> representa a quantidade de chances de gol criadas pelo time mandante durante a partida.  \u00c9 uma vari\u00e1vel num\u00e9rica discreta que indica o n\u00edvel de ofensividade da equipe jogando em casa.  A an\u00e1lise explorat\u00f3ria permite identificar a frequ\u00eancia de jogos com poucas ou muitas oportunidades e verificar a dispers\u00e3o desse tipo de estat\u00edstica.</p> 2025-10-28T14:01:14.574685 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_chances</code> indica a quantidade de chances de gol criadas pelo time visitante durante a partida.  \u00c9 uma vari\u00e1vel num\u00e9rica discreta que ajuda a compreender a ofensividade dos times jogando fora de casa.  A an\u00e1lise explorat\u00f3ria mostra como os visitantes se comportam em termos de cria\u00e7\u00e3o de oportunidades, permitindo identificar padr\u00f5es de equil\u00edbrio ou diferen\u00e7as marcantes em rela\u00e7\u00e3o aos mandantes.</p> 2025-10-28T14:01:14.709058 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/"},{"location":"knn/main/#pre-processamento","title":"Pr\u00e9-processamento","text":"<p>Ap\u00f3s a explora\u00e7\u00e3o inicial da base, foram aplicados procedimentos de pr\u00e9-processamento para preparar os dados para o treinamento do modelo. Entre as etapas realizadas est\u00e3o:</p> <ul> <li>Convers\u00e3o de tipos: vari\u00e1veis originalmente em texto com valores num\u00e9ricos (como <code>attendance</code>) foram transformadas em formato num\u00e9rico.  </li> <li>Tratamento de valores categ\u00f3ricos: colunas como <code>stadium</code>, <code>Home Team</code> e <code>Away Team</code> foram mantidas como categ\u00f3ricas, sendo posteriormente convertidas em vari\u00e1veis num\u00e9ricas por meio de t\u00e9cnicas de codifica\u00e7\u00e3o.  </li> <li>Remo\u00e7\u00e3o de colunas irrelevantes ou redundantes: colunas de identifica\u00e7\u00e3o e de tempo (<code>date</code>, <code>clock</code>, <code>links</code>), bem como estat\u00edsticas que representam vazamento de informa\u00e7\u00e3o do resultado (ex.: <code>Goals Home</code>, <code>Away Goals</code>), foram descartadas do conjunto de treino.  </li> <li>Separa\u00e7\u00e3o entre features e target: as vari\u00e1veis explicativas (<code>X</code>) foram definidas a partir de aproximadamente dez colunas relevantes da base, enquanto a vari\u00e1vel alvo (<code>y</code>) \u00e9 a coluna <code>class</code>.  </li> <li>Divis\u00e3o em treino e teste: o conjunto de dados foi dividido em duas partes, garantindo estratifica\u00e7\u00e3o do alvo para manter o equil\u00edbrio das classes.</li> </ul> Base preparadacodeBase original stadium class attendance Home Team Away Team home_possessions away_possessions home_pass away_pass home_chances away_chances 8 0 52395 1 10 70.6 29.4 91.1 79.3 3 0 7 1 59475 2 11 53.6 46.4 87.1 84.6 1 0 12 0 0 13 6 60.7 39.3 88.9 82.3 1 0 12 2 31395 13 11 64 36 81.3 73.7 1 0 2 0 53018 5 19 63.7 36.3 86.8 74.1 4 0 7 0 0 2 25 64.5 35.5 89.1 79.1 1 0 14 1 25043 11 9 48.9 51.1 81.1 80.1 0 5 4 2 27010 22 1 28.5 71.5 75.4 90.5 0 4 10 0 17080 9 16 68.9 31.1 84.7 68.2 0 1 9 1 0 17 5 41.9 58.1 74.7 83.4 3 4 17 0 32231 12 14 66.6 33.4 88.5 74.6 1 0 <pre><code>import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ndf = pd.read_csv(\"./src/mydata.csv\")\n\n# Excluir as colunas n\u00e3o desejadas\ndf = df.drop(columns= [\"date\", \"clock\", \"links\", \"Goals Home\", \"Away Goals\", \"home_shots\", \"away_shots\", \"home_on\", \"away_on\",\n                        \"home_off\", \"away_off\", \"home_blocked\", \"away_blocked\", \"home_corners\", \"away_corners\", \n                        \"home_offside\", \"away_offside\", \"home_tackles\", \"away_tackles\", \"home_duels\", \"away_duels\",\n                        \"home_saves\", \"away_saves\", \"home_fouls\", \"away_fouls\", \"home_yellow\", \"away_yellow\",\n                        \"home_red\", \"away_red\"])\n\n# Label encoding dos estadios em texto\ndf[\"stadium\"] = label_encoder.fit_transform(df[\"stadium\"])\n\n# Transformar resultado do jogo times em n\u00fameros\ndf[\"class\"] = df[\"class\"].replace({'h':0, 'd': 1, 'a':2})\n\n# Transforma o p\u00fablido de string para n\u00famero\ndf[\"attendance\"] = df[\"attendance\"].str.replace(',', '').astype(int)\n\nprint(df.sample(frac=.01).to_markdown(index=False))\n</code></pre> date clock stadium class attendance Home Team Goals Home Away Team Away Goals home_possessions away_possessions home_shots away_shots home_on away_on home_off away_off home_blocked away_blocked home_pass away_pass home_chances away_chances home_corners away_corners home_offside away_offside home_tackles away_tackles home_duels away_duels home_saves away_saves home_fouls away_fouls home_yellow away_yellow home_red away_red links 17/01/2021 7:15pm Etihad Stadium h 0 1 4 11 0 72.2 27.8 13 2 6 0 3 1 4 1 90.4 72.2 1 0 11 1 0 0 55.6 60 53.8 46.2 0 2 9 8 0 0 0 0 https://www.skysports.com/football/manchester-city-vs-crystal-palace/stats/429023 20th November 2021 5:30pm Anfield h 53,092 5 4 2 0 62.5 37.5 19 5 9 3 3 0 7 2 88.4 81 4 0 6 1 2 8 57.1 33.3 50 50 3 5 15 12 2 0 0 0 https://www.skysports.com/football/liverpool-vs-arsenal/stats/446401 1/11/2020 4:30pm Old Trafford a 0 3 0 2 1 53.3 46.7 8 7 2 2 3 5 3 0 85.1 85.6 0 0 6 3 4 0 70 75 66.7 33.3 1 3 12 12 3 3 0 0 https://www.skysports.com/football/manchester-united-vs-arsenal/stats/428902 16/01/2021 3:00pm London Stadium h 0 14 1 23 0 44.8 55.2 15 10 4 2 6 3 5 5 72.8 73.8 0 0 7 4 5 1 62.5 46.2 54.4 45.6 2 2 12 9 2 1 0 0 https://www.skysports.com/football/west-ham-united-vs-burnley/stats/429025 21st May 2023 2:00pm Amex Stadium h 31,507 6 3 20 1 63 37 26 5 8 1 11 3 7 1 91.7 79.6 1 1 4 3 1 1 69.2 62.5 73.3 26.7 0 5 8 9 2 5 0 0 https://www.skysports.com/football/brighton-and-hove-albion-vs-southampton/464996 25th April 2022 8:00pm Selhurst Park d 25,357 11 0 19 0 52.5 47.5 17 9 7 2 6 4 4 3 75.2 69.1 0 0 6 3 1 1 53.8 58.6 57.8 42.2 2 7 12 13 2 2 0 0 https://www.skysports.com/football/crystal-palace-vs-leeds-united/stats/446623 3rd October 2021 2:00pm Tottenham Hotspur Stadium h 53,076 8 2 7 1 56.3 43.7 17 14 8 3 6 5 3 6 79.7 71.1 3 1 5 8 0 1 57.1 57.1 48.8 51.2 2 6 11 14 2 1 0 0 https://www.skysports.com/football/tottenham-hotspur-vs-aston-villa/stats/446355 12th December 2021 2:00pm The King Power Stadium h 31,959 18 4 4 0 47.3 52.7 8 12 5 3 2 3 1 6 79.3 79.8 2 0 4 6 0 1 65 61.5 46.7 53.3 3 1 9 16 2 3 0 0 https://www.skysports.com/football/leicester-city-vs-newcastle-united/stats/446444 21st November 2021 2:00pm Etihad Stadium h 52,571 1 3 17 0 73.3 22.7 17 4 7 1 6 0 4 3 93.7 69.6 4 0 7 1 0 2 46.7 38.9 75 25 1 4 5 7 1 1 0 0 https://www.skysports.com/football/manchester-city-vs-everton/stats/446402 26/12/2020 8:00pm Bramall Lane a 0 25 0 17 1 43.8 56.2 10 7 2 3 5 3 3 1 72.9 79.1 1 1 6 3 0 2 50 76.9 38.8 61.2 2 1 11 10 2 4 0 0 https://www.skysports.com/football/sheffield-united-vs-everton/stats/428984 12/3/2021 8:00pm St James' Park, Newcastle d 0 4 1 7 1 49 51 12 15 3 6 4 4 5 5 71.9 76.2 1 1 2 2 0 4 65 50 44 56 6 3 10 10 2 3 0 0 https://www.skysports.com/football/newcastle-united-vs-aston-villa/stats/429114"},{"location":"knn/main/#divisao-dos-dados","title":"Divis\u00e3o dos Dados","text":"<p>Com a base pr\u00e9-processada, realizou-se a divis\u00e3o entre conjuntos de treinamento e teste. O objetivo dessa etapa \u00e9 garantir que o modelo seja avaliado em dados que ele nunca viu durante o treinamento, permitindo uma medida mais confi\u00e1vel de sua capacidade de generaliza\u00e7\u00e3o.  </p> <p>Foi utilizada a fun\u00e7\u00e3o <code>train_test_split</code> da biblioteca scikit-learn, com os seguintes crit\u00e9rios: - 70% dos dados destinados ao treinamento, para que o modelo aprenda os padr\u00f5es da base; - 30% dos dados destinados ao teste, para avaliar o desempenho em novos exemplos; - Estratifica\u00e7\u00e3o pelo alvo (<code>class</code>), garantindo que a propor\u00e7\u00e3o entre vit\u00f3rias do mandante, empates e vit\u00f3rias do visitante fosse mantida em ambos os conjuntos; - Random State fixado, assegurando reprodutibilidade na divis\u00e3o.  </p> <pre><code>import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ndf = pd.read_csv(\"./src/mydata.csv\")\n\n# Excluir as colunas n\u00e3o desejadas\ndf = df.drop(columns= [\"date\", \"clock\", \"links\", \"Goals Home\", \"Away Goals\", \"home_shots\", \"away_shots\", \"home_on\", \"away_on\",\n                        \"home_off\", \"away_off\", \"home_blocked\", \"away_blocked\", \"home_corners\", \"away_corners\", \n                        \"home_offside\", \"away_offside\", \"home_tackles\", \"away_tackles\", \"home_duels\", \"away_duels\",\n                        \"home_saves\", \"away_saves\", \"home_fouls\", \"away_fouls\", \"home_yellow\", \"away_yellow\",\n                        \"home_red\", \"away_red\"])\n\n# Label encoding dos estadios em texto\ndf[\"stadium\"] = label_encoder.fit_transform(df[\"stadium\"])\n\n# Transformar resultado do jogo times em n\u00fameros\ndf[\"class\"] = df[\"class\"].replace({'h':0, 'd': 1, 'a':2})\n\n# Transforma o p\u00fablido de string para n\u00famero\ndf[\"attendance\"] = df[\"attendance\"].str.replace(',', '').astype(int)\n\n# Vari\u00e1veis independentes (features)\nx = df[[\n    \"stadium\", \"attendance\",\n    \"Home Team\", \"Away Team\",\n    \"home_possessions\", \"away_possessions\",\n    \"home_pass\", \"away_pass\",\n    \"home_chances\", \"away_chances\"\n]]\n\n# Vari\u00e1vel dependente (alvo)\ny = df[\"class\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=27, stratify=y)\n</code></pre>"},{"location":"knn/main/#treinamento-do-modelo","title":"Treinamento do Modelo","text":"<p>Nesta se\u00e7\u00e3o foi implementado o algoritmo KNN de forma manual, a partir do zero, para consolidar o entendimento do funcionamento do m\u00e9todo. A implementa\u00e7\u00e3o considera a dist\u00e2ncia euclidiana entre os pontos, identifica os vizinhos mais pr\u00f3ximos e atribui a classe com maior frequ\u00eancia. Esse exerc\u00edcio \u00e9 importante para compreender a l\u00f3gica por tr\u00e1s do KNN antes de utilizar bibliotecas prontas.</p> ModeloC\u00f3digo <p>Acur\u00e1cia (KNN k=5): 0.51 </p> <pre><code>import numpy as np\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.preprocessing import StandardScaler\n\nDATA_PATH = \"./src/mydata.csv\"\ndf = pd.read_csv(DATA_PATH)\n\ny_map = {\"h\": 0, \"d\": 1, \"a\": 2}\ny = df[\"class\"].astype(str).str.strip().map(y_map).astype(int)\n\nnum_cols = [\n    \"attendance\",\n    \"home_possessions\", \"away_possessions\",\n    \"home_pass\", \"away_pass\",\n    \"home_chances\", \"away_chances\",\n]\ncat_cols = [\"stadium\", \"Home Team\", \"Away Team\"]\n\ndf[\"attendance\"] = (\n    df[\"attendance\"]\n      .astype(str)\n      .str.replace(r\"[^0-9]\", \"\", regex=True)\n      .replace(\"\", \"0\")\n      .astype(float)\n)\n\nfor c in num_cols:\n    df[c] = pd.to_numeric(df[c], errors=\"coerce\")\n    df[c] = df[c].fillna(df[c].median())\n\nX_cat = pd.get_dummies(\n    df[cat_cols].astype(str).apply(lambda s: s.str.strip()),\n    drop_first=False, dtype=int\n)\nX_num = df[num_cols].copy()\n\nscaler = StandardScaler()\nX_num[num_cols] = scaler.fit_transform(X_num[num_cols])\n\nX = pd.concat([X_num, X_cat], axis=1).values\n\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.20, random_state=42, stratify=y\n)\n\nclass KNNClassifier:\n    def __init__(self, k=5):\n        self.k = k\n\n    def fit(self, X, y):\n        self.X_train = X\n        self.y_train = np.array(y)\n\n    def predict(self, X):\n        return np.array([self._predict(x) for x in X])\n\n    def _predict(self, x):\n        distances = np.sqrt(((self.X_train - x) ** 2).sum(axis=1))\n        k_idx = np.argsort(distances)[:self.k]\n        k_labels = self.y_train[k_idx]\n        vals, counts = np.unique(k_labels, return_counts=True)\n        return vals[np.argmax(counts)]\n\nknn = KNNClassifier(k=5)\nknn.fit(X_train, y_train)\ny_pred = knn.predict(X_test)\n\nacc = accuracy_score(y_test, y_pred)\nprint(f\"Acur\u00e1cia (KNN k={knn.k}): {acc:.2f}\")\n</code></pre>"},{"location":"knn/main/#usando-scikit-learn","title":"Usando Scikit-Learn","text":"<p>Nesta se\u00e7\u00e3o foi implementado o algoritmo KNN de forma manual, a partir do zero, para consolidar o entendimento do funcionamento do m\u00e9todo. A implementa\u00e7\u00e3o considera a dist\u00e2ncia euclidiana entre os pontos, identifica os vizinhos mais pr\u00f3ximos e atribui a classe com maior frequ\u00eancia. Esse exerc\u00edcio \u00e9 importante para compreender a l\u00f3gica por tr\u00e1s do KNN antes de utilizar bibliotecas prontas.</p> ResultadoC\u00f3digo <p>Accuracy: 0.42  2025-10-28T14:01:15.173956 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ </p> <pre><code>import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.metrics import accuracy_score\n\n# 1) Carregar sua base\ndf = pd.read_csv(\"./src/mydata.csv\")\n\n# 2) Alvo (class): h=mandante, d=empate, a=visitante\ny_map = {\"h\": 0, \"d\": 1, \"a\": 2}\ny = df[\"class\"].astype(str).str.strip().map(y_map).astype(int)\n\n# 3) Sele\u00e7\u00e3o de features (\u224810, sem vazamento)\nnum_cols = [\n    \"attendance\",\n    \"home_possessions\", \"away_possessions\",\n    \"home_pass\", \"away_pass\",\n    \"home_chances\", \"away_chances\",\n]\ncat_cols = [\"stadium\", \"Home Team\", \"Away Team\"]\n\n# 4) Limpezas m\u00ednimas para num\u00e9ricas (ex.: attendance vem como texto com pontua\u00e7\u00e3o)\ndf[\"attendance\"] = (\n    df[\"attendance\"]\n      .astype(str)\n      .str.replace(r\"[^0-9]\", \"\", regex=True)\n      .replace(\"\", \"0\")\n      .astype(float)\n)\n\nfor c in num_cols:\n    df[c] = pd.to_numeric(df[c], errors=\"coerce\")\n    df[c] = df[c].fillna(df[c].median())\n\n# 5) One-hot para categ\u00f3ricas; escala para num\u00e9ricas\nX_cat = pd.get_dummies(\n    df[cat_cols].astype(str).apply(lambda s: s.str.strip()),\n    drop_first=False, dtype=int\n)\nX_num = df[num_cols].copy()\n\nscaler = StandardScaler()\nX_num[num_cols] = scaler.fit_transform(X_num[num_cols])\n\nX = pd.concat([X_num, X_cat], axis=1).values\n\n# 6) Split (mesma estrutura)\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=42, stratify=y\n)\n\n# 7) PCA s\u00f3 para visualiza\u00e7\u00e3o (2D)\npca = PCA(n_components=2)\nX_train_2d = pca.fit_transform(X_train)\nX_test_2d = pca.transform(X_test)\n\n# 8) KNN (baseline igual)\nknn = KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train_2d, y_train)\npredictions = knn.predict(X_test_2d)\nprint(f\"Accuracy: {accuracy_score(y_test, predictions):.2f}\")\n\n# 9) Fronteira de decis\u00e3o (no espa\u00e7o 2D do PCA)\nplt.figure(figsize=(12, 10))\nh = 0.05\nx_min, x_max = X_train_2d[:, 0].min() - 1, X_train_2d[:, 0].max() + 1\ny_min, y_max = X_train_2d[:, 1].min() - 1, X_train_2d[:, 1].max() + 1\nxx, yy = np.meshgrid(np.arange(x_min, x_max, h), np.arange(y_min, y_max, h))\n\nZ = knn.predict(np.c_[xx.ravel(), yy.ravel()])\nZ = Z.reshape(xx.shape)\n\nplt.contourf(xx, yy, Z, cmap=plt.cm.RdYlBu, alpha=0.3)\nsns.scatterplot(x=X_train_2d[:, 0], y=X_train_2d[:, 1], hue=y_train,\n                palette=\"deep\", s=100, edgecolor=\"k\", alpha=0.8, legend=\"full\")\n\nplt.xlabel(\"PCA 1\")\nplt.ylabel(\"PCA 2\")\nplt.title(\"KNN Decision Boundary (Football Matches)\")\n\nbuffer = StringIO()\nplt.savefig(buffer, format=\"svg\", transparent=True)\nprint(buffer.getvalue())\n</code></pre>"},{"location":"knn/main/#avaliacao-do-modelo","title":"Avalia\u00e7\u00e3o do Modelo","text":"<p>Ap\u00f3s o treinamento do algoritmo KNN, o modelo foi avaliado no conjunto de teste, obtendo resultados de acur\u00e1cia em torno de 0.42 (usando scikit-learn) e 0.51 (na implementa\u00e7\u00e3o manual). Esses valores mostram que o modelo consegue acertar parte das previs\u00f5es, mas ainda apresenta uma performance limitada.  </p> <p>Esse resultado deve ser interpretado considerando a natureza do problema: prever o resultado de uma partida de futebol \u00e9 uma tarefa complexa, com alto grau de incerteza. Mesmo dispondo de estat\u00edsticas como posse de bola, passes, chances criadas, est\u00e1dio e p\u00fablico, o desfecho de um jogo depende tamb\u00e9m de fatores externos como arbitragem, les\u00f5es, clima, motiva\u00e7\u00e3o e at\u00e9 elementos de acaso. Portanto, ainda que houvesse mais dados dispon\u00edveis, a previs\u00e3o exata continuaria sendo incerta.  </p> <p>A figura abaixo mostra a fronteira de decis\u00e3o do KNN no espa\u00e7o bidimensional reduzido pelo PCA. As regi\u00f5es coloridas representam as \u00e1reas de influ\u00eancia de cada classe, enquanto os pontos correspondem \u00e0s partidas reais.</p> <p>\u00c9 poss\u00edvel observar uma forte sobreposi\u00e7\u00e3o entre classes, com pontos de diferentes resultados distribu\u00eddos de forma bastante misturada. Isso refor\u00e7a as limita\u00e7\u00f5es do modelo:</p> <ul> <li>Baixa capacidade preditiva: as vari\u00e1veis utilizadas ajudam a descrever o contexto, mas n\u00e3o criam fronteiras claras para separar vit\u00f3rias, empates e derrotas.  </li> <li>Balanceamento do alvo: os empates, menos frequentes, tendem a ser mal classificados, prejudicando a acur\u00e1cia global.  </li> <li>Sensibilidade do algoritmo: o KNN depende fortemente da escala, da escolha de <code>k</code> e da representa\u00e7\u00e3o dos dados, o que gera varia\u00e7\u00f5es nos resultados.  </li> <li>Complexidade do dom\u00ednio: a imprevisibilidade do futebol limita naturalmente a precis\u00e3o que qualquer modelo pode alcan\u00e7ar.  </li> </ul> <p>Portanto, as acur\u00e1cias obtidas refletem tanto as limita\u00e7\u00f5es do KNN quanto a complexidade do fen\u00f4meno esportivo. Mais do que \u201cacertar resultados\u201d, o exerc\u00edcio evidencia os desafios de aplicar Machine Learning em cen\u00e1rios reais de alta incerteza.</p>"},{"location":"knn/main/#relatorio-final","title":"Relat\u00f3rio Final","text":"<p>O projeto teve como objetivo aplicar o algoritmo KNN sobre uma base de partidas de futebol, explorando seu potencial no contexto esportivo.  </p> <p>A an\u00e1lise foi conduzida em etapas bem definidas:</p> <ul> <li>Explora\u00e7\u00e3o dos Dados (EDA): foram selecionadas e analisadas cerca de dez vari\u00e1veis relevantes, incluindo <code>stadium</code>, <code>attendance</code>, <code>Home Team</code>, <code>Away Team</code>, <code>home_possessions</code>, <code>away_possessions</code>, <code>home_pass</code>, <code>away_pass</code>, <code>home_chances</code> e <code>away_chances</code>.  </li> <li>Pr\u00e9-processamento: colunas irrelevantes (como IDs e dados de tempo) e estat\u00edsticas ligadas diretamente ao resultado (como gols) foram removidas. Vari\u00e1veis categ\u00f3ricas foram transformadas em num\u00e9ricas via One-Hot Encoding e vari\u00e1veis cont\u00ednuas foram padronizadas.  </li> <li>Divis\u00e3o dos Dados: o conjunto foi separado em treino (70%) e teste (30%), preservando a propor\u00e7\u00e3o entre vit\u00f3rias, empates e derrotas atrav\u00e9s da estratifica\u00e7\u00e3o.  </li> <li>Treinamento e Avalia\u00e7\u00e3o: o KNN foi aplicado em duas vers\u00f5es \u2014 manual e com scikit-learn \u2014 alcan\u00e7ando acur\u00e1cias de 0.42\u20130.51, valores que evidenciam desempenho limitado, mas condizente com a natureza do problema.  </li> </ul> <p>A avalia\u00e7\u00e3o trouxe alguns aprendizados importantes: - O KNN \u00e9 sens\u00edvel \u00e0 prepara\u00e7\u00e3o dos dados e \u00e0 escolha de hiperpar\u00e2metros, o que explica diferen\u00e7as entre implementa\u00e7\u00f5es. - As vari\u00e1veis utilizadas caracterizam parcialmente os jogos, mas n\u00e3o s\u00e3o suficientes para prever com exatid\u00e3o seus resultados. - A visualiza\u00e7\u00e3o da fronteira de decis\u00e3o mostrou que as classes apresentam alta sobreposi\u00e7\u00e3o, o que dificulta a separa\u00e7\u00e3o clara. - O futebol, por ser um evento com forte componente de imprevisibilidade, imp\u00f5e limites naturais ao desempenho de qualquer modelo.  </p>"},{"location":"knn/main/#conclusao","title":"Conclus\u00e3o","text":"<p>Assim como na \u00e1rvore de decis\u00e3o, a experi\u00eancia com o KNN refor\u00e7a a import\u00e2ncia de interpretar os resultados com cautela. A acur\u00e1cia pr\u00f3xima de 0.5 n\u00e3o deve ser vista apenas como limita\u00e7\u00e3o do algoritmo, mas como reflexo da complexidade do dom\u00ednio esportivo.  </p> <p>O projeto destacou a relev\u00e2ncia da an\u00e1lise explorat\u00f3ria, do cuidado com o pr\u00e9-processamento e da avalia\u00e7\u00e3o cr\u00edtica dos modelos. Al\u00e9m disso, abre espa\u00e7o para trabalhos futuros que explorem vari\u00e1veis adicionais (desempenho hist\u00f3rico dos times, estat\u00edsticas de jogadores, forma recente, fatores externos) e ajustes de hiperpar\u00e2metros do KNN para buscar melhorias.  </p> <p>Mais do que prever com exatid\u00e3o, este trabalho evidencia o potencial e os limites do uso de algoritmos de aprendizado de m\u00e1quina em contextos reais, nos quais a incerteza \u00e9 parte inerente do fen\u00f4meno analisado.</p>"},{"location":"random-forest/main/","title":"Random Forest","text":""},{"location":"random-forest/main/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Aplicar Random Forest para prever o resultado de partidas da Premier League (<code>class</code>: 0=mandante, 1=empate, 2=visitante) usando as ~10 vari\u00e1veis j\u00e1 utilizadas nos modelos anteriores (est\u00e1dio, p\u00fablico, posse, passes, chances e IDs dos times). Mantivemos o mesmo padr\u00e3o do projeto: remo\u00e7\u00e3o de colunas com vazamento, limpeza de tipos (ex.: <code>attendance</code>), estratifica\u00e7\u00e3o na divis\u00e3o 70/30 e sem usar estat\u00edsticas de gols.</p>"},{"location":"random-forest/main/#base-de-dados","title":"Base de dados","text":"<p>A base de dados utilizada neste projeto cont\u00e9m informa\u00e7\u00f5es de partidas de futebol, totalizando 1140 linhas e 40 colunas. Entre as vari\u00e1veis est\u00e3o posse de bola, n\u00famero de passes e chances criadas. A vari\u00e1vel alvo escolhida \u00e9 a coluna <code>class</code>, que indica o resultado da partida (vit\u00f3ria do mandante, empate ou vit\u00f3ria do visitante).</p>"},{"location":"random-forest/main/#exploracao-dos-dados","title":"Explora\u00e7\u00e3o dos Dados","text":"<p>A seguir foi feita uma an\u00e1lise do significado e composi\u00e7\u00e3o de cada coluna presente na base, com a finalidade de identificar poss\u00edveis problemas a serem tratados posteriormente. As visualiza\u00e7\u00f5es e estat\u00edsticas descritivas ajudam a compreender a natureza dos dados e orientar decis\u00f5es de pr\u00e9-processamento e modelagem.</p> classattendancestadiumhome_possessionsaway_possessionsHome TeamAway Teamhome_passaway_passhome_chancesaway_chances <p>A coluna <code>class</code> \u00e9 a vari\u00e1vel alvo do projeto e representa o resultado da partida: vit\u00f3ria do mandante (\"h\"), empate (\"d\") ou vit\u00f3ria do visitante (\"a\").  Trata-se de uma vari\u00e1vel categ\u00f3rica com tr\u00eas poss\u00edveis valores, sendo o objeto de classifica\u00e7\u00e3o do modelo de \u00e1rvore de decis\u00e3o.  A an\u00e1lise explorat\u00f3ria dessa coluna \u00e9 essencial para observar o balanceamento do conjunto de dados, isto \u00e9, se h\u00e1 propor\u00e7\u00f5es semelhantes ou discrepantes entre os resultados poss\u00edveis.</p> 2025-10-28T14:01:15.648741 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>attendance</code> representa o p\u00fablico presente em cada partida, um indicador de contexto do jogo que pode refletir fatores como mando de campo, relev\u00e2ncia do confronto e engajamento da torcida. Em bases de futebol, o p\u00fablico tende a variar bastante entre est\u00e1dios e rodadas, podendo apresentar assimetria (jogos muito cheios em arenas grandes) e valores at\u00edpicos (cl\u00e1ssicos, finais).</p> <p>Do ponto de vista anal\u00edtico, \u00e9 uma vari\u00e1vel cont\u00ednua \u00fatil para observar a distribui\u00e7\u00e3o de torcedores ao longo das partidas e investigar rela\u00e7\u00f5es com o resultado (<code>class</code>).</p> 2025-10-28T14:01:15.719085 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>stadium</code> identifica o est\u00e1dio onde a partida foi disputada. Trata-se de uma vari\u00e1vel categ\u00f3rica, associada ao contexto e \u00e0 capacidade do local, podendo refletir fatores como mando de campo, perfil da torcida, relevo do gramado e at\u00e9 particularidades log\u00edsticas.  Na an\u00e1lise explorat\u00f3ria, \u00e9 \u00fatil observar a frequ\u00eancia de jogos por est\u00e1dio, verificando balanceamento da amostra (quais arenas t\u00eam mais/menos partidas) e poss\u00edveis vieses (ex.: concentra\u00e7\u00e3o em poucos est\u00e1dios).  Rela\u00e7\u00f5es mais profundas com o resultado (<code>class</code>) podem ser investigadas em etapas seguintes, mas aqui focamos em entender a composi\u00e7\u00e3o dessa vari\u00e1vel no conjunto de dados.</p> 2025-10-28T14:01:15.902109 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_possessions</code> representa a porcentagem de posse de bola do time mandante em cada partida.  Trata-se de uma vari\u00e1vel num\u00e9rica cont\u00ednua, normalmente variando entre 30% e 70% na maioria dos jogos, podendo indicar estilos de jogo (times que mant\u00eam a bola ou que jogam mais reativamente).  A an\u00e1lise explorat\u00f3ria dessa vari\u00e1vel permite observar a distribui\u00e7\u00e3o da posse de bola entre os mandantes, identificar valores at\u00edpicos e comparar a m\u00e9dia do controle de jogo ao longo das rodadas.  Posteriormente, poder\u00e1 ser interessante relacionar essa posse com o resultado final (<code>class</code>) para verificar padr\u00f5es.</p> 2025-10-28T14:01:16.082361 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_possessions</code> representa a porcentagem de posse de bola do time visitante em cada partida.  Por ser uma vari\u00e1vel num\u00e9rica cont\u00ednua, sua distribui\u00e7\u00e3o ajuda a observar o comportamento dos visitantes em termos de controle de jogo, identificar valores at\u00edpicos e comparar a tend\u00eancia m\u00e9dia de posse fora de casa.  Em etapas posteriores, pode ser relacionada ao resultado (<code>class</code>) para investigar padr\u00f5es de desempenho como visitante.</p> 2025-10-28T14:01:16.216122 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>Home Team</code> identifica o time mandante na partida. Embora esteja codificada numericamente no dataset, sua natureza \u00e9 categ\u00f3rica (IDs de times).  Na an\u00e1lise explorat\u00f3ria, \u00e9 \u00fatil observar a frequ\u00eancia de jogos por mandante, verificando o balanceamento da amostra entre os times que atuam em casa e poss\u00edveis concentra\u00e7\u00f5es.  Rela\u00e7\u00f5es com o resultado (<code>class</code>) podem ser exploradas depois; aqui focamos em entender a composi\u00e7\u00e3o dessa vari\u00e1vel.</p> 2025-10-28T14:01:16.375668 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>Away Team</code> identifica o time visitante na partida. Apesar de codificada como n\u00famero, sua natureza \u00e9 categ\u00f3rica (IDs de times).  Na an\u00e1lise explorat\u00f3ria, observar a frequ\u00eancia de jogos por visitante ajuda a avaliar o balanceamento da amostra e poss\u00edveis concentra\u00e7\u00f5es de partidas em determinados clubes.</p> 2025-10-28T14:01:16.579372 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_pass</code> indica o n\u00famero de passes realizados pelo time mandante em cada partida.  \u00c9 uma vari\u00e1vel num\u00e9rica cont\u00ednua que ajuda a caracterizar o estilo de jogo do mandante, podendo variar bastante entre equipes mais ou menos dependentes da posse de bola.  Na an\u00e1lise explorat\u00f3ria, observar a distribui\u00e7\u00e3o dos passes permite identificar m\u00e9dias, dispers\u00e3o e valores at\u00edpicos.</p> 2025-10-28T14:01:16.742518 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_pass</code> indica o n\u00famero de passes realizados pelo time visitante em cada partida.  Sendo uma vari\u00e1vel num\u00e9rica cont\u00ednua, sua distribui\u00e7\u00e3o mostra como os visitantes se comportam em termos de constru\u00e7\u00e3o de jogadas e controle de posse fora de casa.  A an\u00e1lise explorat\u00f3ria ajuda a entender a m\u00e9dia de passes, varia\u00e7\u00f5es entre os jogos e eventuais valores extremos.</p> 2025-10-28T14:01:16.873036 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>home_chances</code> representa a quantidade de chances de gol criadas pelo time mandante durante a partida.  \u00c9 uma vari\u00e1vel num\u00e9rica discreta que indica o n\u00edvel de ofensividade da equipe jogando em casa.  A an\u00e1lise explorat\u00f3ria permite identificar a frequ\u00eancia de jogos com poucas ou muitas oportunidades e verificar a dispers\u00e3o desse tipo de estat\u00edstica.</p> 2025-10-28T14:01:17.007315 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>A coluna <code>away_chances</code> indica a quantidade de chances de gol criadas pelo time visitante durante a partida.  \u00c9 uma vari\u00e1vel num\u00e9rica discreta que ajuda a compreender a ofensividade dos times jogando fora de casa.  A an\u00e1lise explorat\u00f3ria mostra como os visitantes se comportam em termos de cria\u00e7\u00e3o de oportunidades, permitindo identificar padr\u00f5es de equil\u00edbrio ou diferen\u00e7as marcantes em rela\u00e7\u00e3o aos mandantes.</p> 2025-10-28T14:01:17.141155 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/"},{"location":"random-forest/main/#pre-processamento","title":"Pr\u00e9-processamento","text":"<p>Ap\u00f3s a explora\u00e7\u00e3o inicial da base, foram aplicados procedimentos de pr\u00e9-processamento para preparar os dados para o treinamento do modelo. Entre as etapas realizadas est\u00e3o:</p> <ul> <li>Convers\u00e3o de tipos: vari\u00e1veis originalmente em texto com valores num\u00e9ricos (como <code>attendance</code>) foram transformadas em formato num\u00e9rico.  </li> <li>Tratamento de valores categ\u00f3ricos: colunas como <code>stadium</code>, <code>Home Team</code> e <code>Away Team</code> foram mantidas como categ\u00f3ricas, sendo posteriormente convertidas em vari\u00e1veis num\u00e9ricas por meio de t\u00e9cnicas de codifica\u00e7\u00e3o.  </li> <li>Remo\u00e7\u00e3o de colunas irrelevantes ou redundantes: colunas de identifica\u00e7\u00e3o e de tempo (<code>date</code>, <code>clock</code>, <code>links</code>), bem como estat\u00edsticas que representam vazamento de informa\u00e7\u00e3o do resultado (ex.: <code>Goals Home</code>, <code>Away Goals</code>), foram descartadas do conjunto de treino.  </li> <li>Separa\u00e7\u00e3o entre features e target: as vari\u00e1veis explicativas (<code>X</code>) foram definidas a partir de aproximadamente dez colunas relevantes da base, enquanto a vari\u00e1vel alvo (<code>y</code>) \u00e9 a coluna <code>class</code>.  </li> <li>Divis\u00e3o em treino e teste: o conjunto de dados foi dividido em duas partes, garantindo estratifica\u00e7\u00e3o do alvo para manter o equil\u00edbrio das classes.</li> </ul> Base preparadacodeBase original stadium class attendance Home Team Away Team home_possessions away_possessions home_pass away_pass home_chances away_chances 12 0 0 13 12 45.1 54.9 80.4 85.8 1 1 12 2 34624 13 2 37.4 62.6 79.6 89.3 0 1 14 1 0 11 10 40.4 59.6 75.5 83 0 1 19 2 0 24 2 38.1 61.9 74.3 82.7 2 4 15 0 52247 4 10 62.3 37.7 82.2 70 2 0 24 0 42164 7 8 48.7 51.3 85 85.3 3 1 12 1 30328 13 23 65.2 34.8 79.8 66 0 0 10 0 16957 9 19 31.1 68.9 64.7 82.4 3 3 21 0 54202 8 9 47 53 76.1 79.8 3 0 7 2 0 2 5 35.8 64.2 75.9 86.5 0 5 24 0 0 7 25 71.9 28.1 87.9 59.3 0 0 <pre><code>import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ndf = pd.read_csv(\"./src/mydata.csv\")\n\n# Excluir as colunas n\u00e3o desejadas\ndf = df.drop(columns= [\"date\", \"clock\", \"links\", \"Goals Home\", \"Away Goals\", \"home_shots\", \"away_shots\", \"home_on\", \"away_on\",\n                        \"home_off\", \"away_off\", \"home_blocked\", \"away_blocked\", \"home_corners\", \"away_corners\", \n                        \"home_offside\", \"away_offside\", \"home_tackles\", \"away_tackles\", \"home_duels\", \"away_duels\",\n                        \"home_saves\", \"away_saves\", \"home_fouls\", \"away_fouls\", \"home_yellow\", \"away_yellow\",\n                        \"home_red\", \"away_red\"])\n\n# Label encoding dos estadios em texto\ndf[\"stadium\"] = label_encoder.fit_transform(df[\"stadium\"])\n\n# Transformar resultado do jogo times em n\u00fameros\ndf[\"class\"] = df[\"class\"].replace({'h':0, 'd': 1, 'a':2})\n\n# Transforma o p\u00fablido de string para n\u00famero\ndf[\"attendance\"] = df[\"attendance\"].str.replace(',', '').astype(int)\n\nprint(df.sample(frac=.01).to_markdown(index=False))\n</code></pre> date clock stadium class attendance Home Team Goals Home Away Team Away Goals home_possessions away_possessions home_shots away_shots home_on away_on home_off away_off home_blocked away_blocked home_pass away_pass home_chances away_chances home_corners away_corners home_offside away_offside home_tackles away_tackles home_duels away_duels home_saves away_saves home_fouls away_fouls home_yellow away_yellow home_red away_red links 12th March 2023 2:00pm Craven Cottage a 24,426 10 0 2 3 44.7 55.3 12 15 2 7 6 3 4 5 82.7 86.5 0 4 4 8 2 2 57.1 70 59.3 40.7 4 2 10 9 0 1 0 0 https://www.skysports.com/football/fulham-vs-arsenal/464898 18th February 2023 3:00pm Amex Stadium a 31,619 6 0 10 1 65.3 34.7 21 5 7 2 10 0 4 3 87.7 73.1 5 0 10 2 4 0 40 38.5 59.3 40.7 1 7 12 14 0 5 0 0 https://www.skysports.com/football/brighton-and-hove-albion-vs-fulham/464867 24/04/2021 8:00pm Bramall Lane h 0 25 1 6 0 31.5 68.5 7 17 3 4 1 8 3 5 67.8 86.9 0 3 2 12 0 1 66.7 40 38.5 61.5 4 2 13 7 3 0 0 0 https://www.skysports.com/football/sheffield-united-vs-brighton-and-hove-albion/stats/429164 10th March 2022 7:30pm Carrow Road a 26,722 22 1 12 3 33.7 66.3 8 15 3 7 4 5 1 3 82.7 91.7 0 3 3 8 2 1 56.3 66.7 26.7 73.3 4 2 8 15 0 2 0 0 https://www.skysports.com/football/norwich-city-vs-chelsea/stats/446584 11th May 2022 7:30pm Elland Road a 36,549 19 0 12 3 32.1 67.9 5 17 0 4 4 10 1 3 78.6 90.8 1 0 1 5 0 3 62.5 52.9 45.5 54.5 0 0 10 14 1 0 1 0 https://www.skysports.com/football/leeds-united-vs-chelsea/stats/446610 4th February 2023 3:00pm Molineux h 31,664 13 3 5 0 41.8 58.2 12 22 6 4 5 8 1 10 74.9 85.5 3 1 2 7 1 2 62.5 70 46.7 53.3 2 3 9 7 1 1 0 0 https://www.skysports.com/football/wolverhampton-wanderers-vs-liverpool/464854 31st December 2022 3:00pm Vitality Stadium a 9,972 15 0 11 2 58.9 41.1 6 15 2 6 3 4 1 5 75.2 68.8 0 2 2 7 1 1 58.8 56.7 52 48 4 2 17 11 4 1 0 0 https://www.skysports.com/football/bournemouth-vs-crystal-palace/464805 27th November 2021 3:00pm Selhurst Park a 25,203 11 1 7 2 63.3 36.7 8 10 3 3 4 5 1 2 86.8 79.4 1 0 7 3 1 0 75 75 52 48 1 2 12 10 3 3 0 0 https://www.skysports.com/football/crystal-palace-vs-aston-villa/stats/446413 18/10/2020 12:00pm Bramall Lane d 0 25 1 10 1 41.5 58.5 10 15 6 6 3 5 1 4 80.2 84.4 2 1 2 5 4 0 60 57.1 55.6 44.4 5 5 5 9 0 2 0 0 https://www.skysports.com/football/sheffield-united-vs-fulham/stats/428884 18th September 2022 12:00p Gtech Community Stadium a 17,122 9 0 2 3 36.1 63.9 5 13 2 7 3 4 0 2 74.1 86 1 2 3 3 3 1 61.9 75 72.4 27.6 4 2 10 10 0 2 0 0 https://www.skysports.com/football/brentford-vs-arsenal/464706 21/02/2021 7:00pm Old Trafford h 0 3 3 4 1 71.6 28.4 15 10 7 6 4 3 4 1 86.7 68.9 1 0 6 4 2 1 54.5 56.3 66.7 33.3 5 4 9 11 1 2 0 0 https://www.skysports.com/football/manchester-united-vs-newcastle-united/stats/429083"},{"location":"random-forest/main/#divisao-dos-dados","title":"Divis\u00e3o dos Dados","text":"<p>Com a base pr\u00e9-processada, realizou-se a divis\u00e3o entre conjuntos de treinamento e teste. O objetivo dessa etapa \u00e9 garantir que o modelo seja avaliado em dados que ele nunca viu durante o treinamento, permitindo uma medida mais confi\u00e1vel de sua capacidade de generaliza\u00e7\u00e3o.  </p> <p>Foi utilizada a fun\u00e7\u00e3o <code>train_test_split</code> da biblioteca scikit-learn, com os seguintes crit\u00e9rios: - 70% dos dados destinados ao treinamento, para que o modelo aprenda os padr\u00f5es da base; - 30% dos dados destinados ao teste, para avaliar o desempenho em novos exemplos; - Estratifica\u00e7\u00e3o pelo alvo (<code>class</code>), garantindo que a propor\u00e7\u00e3o entre vit\u00f3rias do mandante, empates e vit\u00f3rias do visitante fosse mantida em ambos os conjuntos; - Random State fixado, assegurando reprodutibilidade na divis\u00e3o.  </p> <pre><code>import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import tree\nfrom sklearn.metrics import accuracy_score\nimport matplotlib.pyplot as plt\nfrom io import StringIO\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\n\ndf = pd.read_csv(\"./src/mydata.csv\")\n\n# Excluir as colunas n\u00e3o desejadas\ndf = df.drop(columns= [\"date\", \"clock\", \"links\", \"Goals Home\", \"Away Goals\", \"home_shots\", \"away_shots\", \"home_on\", \"away_on\",\n                        \"home_off\", \"away_off\", \"home_blocked\", \"away_blocked\", \"home_corners\", \"away_corners\", \n                        \"home_offside\", \"away_offside\", \"home_tackles\", \"away_tackles\", \"home_duels\", \"away_duels\",\n                        \"home_saves\", \"away_saves\", \"home_fouls\", \"away_fouls\", \"home_yellow\", \"away_yellow\",\n                        \"home_red\", \"away_red\"])\n\n# Label encoding dos estadios em texto\ndf[\"stadium\"] = label_encoder.fit_transform(df[\"stadium\"])\n\n# Transformar resultado do jogo times em n\u00fameros\ndf[\"class\"] = df[\"class\"].replace({'h':0, 'd': 1, 'a':2})\n\n# Transforma o p\u00fablido de string para n\u00famero\ndf[\"attendance\"] = df[\"attendance\"].str.replace(',', '').astype(int)\n\n# Vari\u00e1veis independentes (features)\nx = df[[\n    \"stadium\", \"attendance\",\n    \"Home Team\", \"Away Team\",\n    \"home_possessions\", \"away_possessions\",\n    \"home_pass\", \"away_pass\",\n    \"home_chances\", \"away_chances\"\n]]\n\n# Vari\u00e1vel dependente (alvo)\ny = df[\"class\"]\n\nx_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=27, stratify=y)\n</code></pre>"},{"location":"random-forest/main/#treinamento-do-modelo","title":"Treinamento do Modelo","text":"<p>O conjunto de treino (70%) foi usado para ajustar a floresta; o teste (30%) permaneceu isolado para avalia\u00e7\u00e3o justa.</p> ModeloC\u00f3digo <p>Accuracy: 0.5673 Import\u00e2ncia das Features:  Feature Import\u00e2ncia away_chances 0.221561 home_chances 0.116014 Home Team 0.111948 Away Team 0.109174 away_pass 0.103906 home_pass 0.100182 attendance 0.086747 away_possessions 0.055630 home_possessions 0.051652 stadium 0.043184 </p> <pre><code>import pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.preprocessing import LabelEncoder\nimport numpy as np\n\n# ===================== Ler base =====================\ndf = pd.read_csv(\"./src/mydata.csv\")\n\n# ===================== Excluir colunas de vazamento/irrelevantes =====================\ndf = df.drop(columns=[\n    \"date\", \"clock\", \"links\",\n    \"Goals Home\", \"Away Goals\",\n    \"home_shots\", \"away_shots\",\n    \"home_on\", \"away_on\",\n    \"home_off\", \"away_off\",\n    \"home_blocked\", \"away_blocked\",\n    \"home_corners\", \"away_corners\",\n    \"home_offside\", \"away_offside\",\n    \"home_tackles\", \"away_tackles\",\n    \"home_duels\", \"away_duels\",\n    \"home_saves\", \"away_saves\",\n    \"home_fouls\", \"away_fouls\",\n    \"home_yellow\", \"away_yellow\",\n    \"home_red\", \"away_red\"\n], errors=\"ignore\")\n\n# ===================== Limpezas =====================\n# stadium em texto -&gt; label encoding\nle_stadium = LabelEncoder()\ndf[\"stadium\"] = le_stadium.fit_transform(df[\"stadium\"].astype(str))\n\n# class: h/d/a -&gt; 0/1/2\ndf[\"class\"] = df[\"class\"].replace({\"h\": 0, \"d\": 1, \"a\": 2}).astype(int)\n\n# attendance: \"12,345\" -&gt; 12345\ndf[\"attendance\"] = (\n    df[\"attendance\"]\n      .astype(str)\n      .str.replace(r\"[^0-9]\", \"\", regex=True)\n      .replace(\"\", \"0\")\n      .astype(float)\n)\n\n# garantir num\u00e9ricos + imputar medianas nas features\nnum_cols = [\n    \"attendance\",\n    \"home_possessions\", \"away_possessions\",\n    \"home_pass\", \"away_pass\",\n    \"home_chances\", \"away_chances\"\n]\nfor c in num_cols:\n    df[c] = pd.to_numeric(df[c], errors=\"coerce\")\n    med = df[c].median() if df[c].notna().any() else 0\n    df[c] = df[c].fillna(med)\n\n# ===================== Features e alvo =====================\nX = df[[\n    \"stadium\", \"attendance\",\n    \"Home Team\", \"Away Team\",\n    \"home_possessions\", \"away_possessions\",\n    \"home_pass\", \"away_pass\",\n    \"home_chances\", \"away_chances\"\n]].copy()\n\ny = df[\"class\"].copy()\n\n# Alguns times podem ter NA; garantir num\u00e9rico\nX[\"Home Team\"] = pd.to_numeric(X[\"Home Team\"], errors=\"coerce\").fillna(-1).astype(int)\nX[\"Away Team\"] = pd.to_numeric(X[\"Away Team\"], errors=\"coerce\").fillna(-1).astype(int)\n\n# ===================== Split (70/30) com estratifica\u00e7\u00e3o =====================\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.30, random_state=27, stratify=y\n)\n\n# ===================== Random Forest =====================\nrf = RandomForestClassifier(\n    n_estimators=100,      # n\u00famero de \u00e1rvores\n    max_depth=5,          # profundidade m\u00e1xima (controle de overfitting)\n    max_features='sqrt',  # n\u00ba de features por split\n    random_state=27,\n    n_jobs=-1\n)\nrf.fit(X_train, y_train)\n\n# ===================== Avalia\u00e7\u00e3o =====================\npred = rf.predict(X_test)\nacc = accuracy_score(y_test, pred)\nprint(f\"Accuracy: {acc:.4f}\")\n\n# Import\u00e2ncia das features\nfeat_imp = pd.DataFrame({\n    \"Feature\": rf.feature_names_in_,\n    \"Import\u00e2ncia\": rf.feature_importances_\n}).sort_values(\"Import\u00e2ncia\", ascending=False)\n\nprint(\"&lt;br&gt;Import\u00e2ncia das Features:\")\nprint(feat_imp.to_html(index=False))\n</code></pre>"},{"location":"random-forest/main/#avaliacao-do-modelo","title":"Avalia\u00e7\u00e3o do Modelo","text":"<p>Acur\u00e1cia (teste): 0.5673.   Esse desempenho supera os resultados anteriores (\u00c1rvore \u2248 0,48; KNN \u2248 0,42\u20130,51), indicando melhor generaliza\u00e7\u00e3o e robustez da Random Forest no problema.</p> <ul> <li>Import\u00e2ncia das vari\u00e1veis (top-10):</li> <li><code>away_chances</code> \u2014 0.2216  </li> <li><code>home_chances</code> \u2014 0.1160  </li> <li><code>Home Team</code> \u2014 0.1119  </li> <li><code>Away Team</code> \u2014 0.1092  </li> <li><code>away_pass</code> \u2014 0.1039  </li> <li><code>home_pass</code> \u2014 0.1002  </li> <li><code>attendance</code> \u2014 0.0867  </li> <li><code>away_possessions</code> \u2014 0.0556  </li> <li><code>home_possessions</code> \u2014 0.0517  </li> <li><code>stadium</code> \u2014 0.0432</li> </ul> <p>Leituras r\u00e1pidas: - Chances criadas (mandante/visitante) e passes s\u00e3o os sinais mais relevantes \u2014 coerente com din\u00e2mica ofensiva/controle de jogo. - Os IDs dos times entram forte (efeitos fixos de qualidade/estilo). - Est\u00e1dio pesa menos, sugerindo que, ap\u00f3s controlar por equipe e m\u00e9tricas do jogo, o local adiciona pouca informa\u00e7\u00e3o.</p>"},{"location":"random-forest/main/#relatorio-final","title":"Relat\u00f3rio Final","text":"<p>A Random Forest apresentou melhor desempenho que a \u00c1rvore de Decis\u00e3o e o KNN, indicando ganho com agrega\u00e7\u00e3o de m\u00faltiplas \u00e1rvores e menor vari\u00e2ncia. Ainda assim, prever resultados de futebol segue dif\u00edcil (classe de empate \u00e9 rara e ruidosa), o que limita a acur\u00e1cia.</p> <p>Resultado geral: a RF \u00e9 a melhor baseline at\u00e9 aqui para este conjunto de vari\u00e1veis, com boa interpretabilidade via import\u00e2ncias e espa\u00e7o claro para melhoria com feature engineering e ajuste fino.</p>"},{"location":"roteiro1/main/","title":"Main","text":""},{"location":"roteiro1/main/#objetivo","title":"Objetivo","text":"<p>Aqui vai o objetivo macro do roteiro. Por que estamos fazendo o que estamos fazendo?</p>"},{"location":"roteiro1/main/#montagem-do-roteiro","title":"Montagem do Roteiro","text":"<p>Os pontos \"tarefas\" s\u00e3o os passos que devem ser seguidos para a realiza\u00e7\u00e3o do roteiro. Eles devem ser claros e objetivos. Com evid\u00eancias claras de que foram realizados.</p>"},{"location":"roteiro1/main/#tarefa-1","title":"Tarefa 1","text":"<p>Instalando o MAAS:</p> sudo snap install maas --channel=3.5/Stable <p></p> <p>Dashboard do MAAS</p> <p>Conforme ilustrado acima, a tela inicial do MAAS apresenta um dashboard com informa\u00e7\u00f5es sobre o estado atual dos servidores gerenciados. O dashboard \u00e9 composto por diversos pain\u00e9is, cada um exibindo informa\u00e7\u00f5es sobre um aspecto espec\u00edfico do ambiente gerenciado. Os pain\u00e9is podem ser configurados e personalizados de acordo com as necessidades do usu\u00e1rio.</p>"},{"location":"roteiro1/main/#tarefa-2","title":"Tarefa 2","text":""},{"location":"roteiro1/main/#app","title":"App","text":""},{"location":"roteiro1/main/#tarefa-1_1","title":"Tarefa 1","text":""},{"location":"roteiro1/main/#tarefa-2_1","title":"Tarefa 2","text":"<p>Exemplo de diagrama</p> <pre><code>architecture-beta\n    group api(cloud)[API]\n\n    service db(database)[Database] in api\n    service disk1(disk)[Storage] in api\n    service disk2(disk)[Storage] in api\n    service server(server)[Server] in api\n\n    db:L -- R:server\n    disk1:T -- B:server\n    disk2:T -- B:db</code></pre> <p>Mermaid</p>"},{"location":"roteiro1/main/#questionario-projeto-ou-plano","title":"Question\u00e1rio, Projeto ou Plano","text":"<p>Esse se\u00e7\u00e3o deve ser preenchida apenas se houver demanda do roteiro.</p>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<p>Quais as dificuldades encontradas? O que foi mais f\u00e1cil? O que foi mais dif\u00edcil?</p>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>O que foi poss\u00edvel concluir com a realiza\u00e7\u00e3o do roteiro?</p>"},{"location":"roteiro2/main/","title":"Main","text":""},{"location":"roteiro2/main/#diagrama-de-classes-do-banco","title":"Diagrama de Classes do Banco","text":"<pre><code>classDiagram\n    class Conta {\n        - String id\n        # double saldo\n        - Cliente cliente\n        + sacar(double valor)\n        + depositar(double valor)\n    }\n    class Cliente {\n        - String id\n        - String nome\n        - List&lt;Conta&gt; contas\n    }\n    class PessoaFisica {\n        - String cpf\n    }\n    class PessoaJuridica {\n        - String cnpj\n    }\n    class ContaCorrente {\n        - double limite\n        + sacar(double valor)\n    }\n    class ContaPoupanca {\n        + sacar(double valor)\n    }\n    Conta *-- Cliente\n    Conta &lt;|-- ContaCorrente\n    Conta &lt;|-- ContaPoupanca\n    Cliente &lt;|-- PessoaFisica\n    Cliente &lt;|-- PessoaJuridica</code></pre>"},{"location":"roteiro2/main/#diagrama-de-sequencia-de-autorizacao","title":"Diagrama de Seq\u00fc\u00eancia de Autoriza\u00e7\u00e3o","text":"<pre><code>sequenceDiagram\n  autonumber\n  actor User\n  User-&gt;&gt;Auth Service: request with token\n  Auth Service-&gt;&gt;Auth Service: decodes the token and extracts claims\n  Auth Service-&gt;&gt;Auth Service: verifies permissions\n  critical allowed\n    Auth Service-&gt;&gt;Secured Resource: authorizes the request\n    Secured Resource-&gt;&gt;User: returns the response\n  option denied\n    Auth Service--&gt;&gt;User: unauthorized message\n  end  </code></pre>"},{"location":"roteiro3/main/","title":"Main","text":"<p>Running the code below in Browser (Woooooowwwwww!!!!!!). <sup>1</sup></p> <p> </p> Editor (session: default) Run <pre>import ssl\nimport pandas as pd\n\ndf = pd.DataFrame()\ndf['AAPL'] = pd.Series([1, 2, 3])\ndf['MSFT'] = pd.Series([4, 5, 6])\ndf['GOOGL'] = pd.Series([7, 8, 9])\n\nprint(df)\n</pre> Output Clear <pre></pre> <p></p> <ol> <li> <p>Pyodide \u21a9</p> </li> </ol>"},{"location":"roteiro4/main/","title":"Main","text":"<p>Se chegou aqui, \u00e9 porque voc\u00ea est\u00e1 interessado em saber mais. Logo, de brinde, como rodar um c\u00f3digo <code>Python</code> aqui.</p> 2025-10-28T14:01:17.728941 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ 2025-10-28T14:01:18.634509 image/svg+xml Matplotlib v3.10.7, https://matplotlib.org/ <p>Markdown-exec \u00e9 uma extens\u00e3o do Markdown que permite executar c\u00f3digo Python diretamente no Markdown. Isso \u00e9 \u00fatil para gerar resultados din\u00e2micos ou executar scripts de forma interativa.</p>"}]}